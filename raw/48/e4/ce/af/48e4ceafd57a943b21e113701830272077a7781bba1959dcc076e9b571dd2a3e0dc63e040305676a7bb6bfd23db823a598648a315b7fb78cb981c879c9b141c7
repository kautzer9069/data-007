 ///
 /// @file    RAII.cc
 /// @author  lemon(haohb13@gmail.com)
 /// @date    2018-06-23 10:17:02
 ///
 
#include <iostream>
using std::cout;
using std::endl;



template <typename T>
class RAII
{
public:
	RAII(T * pdata)
	: _pdata(pdata)
	{}

	T * operator->()
	{
		return _pdata;
	}

	T & operator*()
	{
		return *_pdata;
	}

	~RAII()
	{
		if(_pdata)
			delete _pdata;
	}
	
private:
	T * _pdata;
};

class Point
{
public:
	Point(int ix, int iy)
	: _ix(ix)
	, _iy(iy)
	{	cout << "Point(int,int)" << endl;	}
	
	void print() const
	{
		cout << "(" << _ix
			 << "," << _iy
			 << ")" << endl;
	}

	~Point()
	{	cout << "~Point()" << endl;	}
private:
	int _ix;
	int _iy;
};

 
int main(void)
{
	RAII<int> pInt(new int(1));
	cout << "*pInt = " << *pInt << endl; 

	RAII<Point>  pPoint(new Point(1, 2));//pPoint是对象,但用法类似于一个指针，智能指针
	pPoint->print();
	(*pPoint).print();

	return 0;
}
