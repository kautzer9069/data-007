 ///
 /// @file    circleReference.cc
 /// @author  lemon(haohb13@gmail.com)
 /// @date    2018-06-23 11:25:34
 ///
 
#include <iostream>
#include <memory>
using std::cout;
using std::endl;
using std::shared_ptr;



//shared_ptr发生了循环引用，导致内存泄漏
class Child;

class Parent
{
public:	
	Parent(){	cout << "Parent()" << endl;	}

	~Parent() {	cout << "~Parent()" << endl;	}

	shared_ptr<Child> _pChild;
};

class Child
{
public:
	Child(){	cout << "Child()" << endl;	}
	~Child(){	cout << "~Child()" << endl;	}

	shared_ptr<Parent> _pParent;
};
 
int main(void)
{
	shared_ptr<Parent> pParent(new Parent);
	shared_ptr<Child> pChild(new Child);

	pParent->_pChild = pChild;
	pChild->_pParent = pParent;

	return 0;
}
