 ///
 /// @file    Point2.cc
 /// @author  lemon(haohb13@gmail.com)
 /// @date    2018-06-06 14:59:17
 ///
 
#include <iostream>
using std::cout;
using std::endl;


class Point
{
public:
	Point()
	: _ix(0)
	, _iy(0)
	{
		cout << "Point()" << endl;
	}

	//初始化列表 或者 初始化表达式
	Point(int ix, int iy)
	: _ix(ix)
	, _iy(iy) 
	{
		cout << "Point(int,int)" << endl;
	}

	void print(){
		cout << "(" << _ix 
			 << "," << _iy
			 << ")" << endl;
	}

	//析构函数也是特殊的成员函数
	//
	//当对象的生命周期结束时会被自动调用
	~Point()
	{
		cout << "~Point()" << endl;
	}

private:
	int _ix;
	int _iy;
};
 
int main(void)
{
	int a = 1;

	int b(2);
	cout << "a = " << a << endl;
	cout << "b = " << b << endl;


	Point p;//调用无参(默认)构造函数Point()   栈对象
	p.print();

	Point point(1, 2);
	point.print();

	return 0;
}
