 ///
 /// @file    deleter.cc
 /// @author  lemon(haohb13@gmail.com)
 /// @date    2018-06-23 11:58:11
 ///
 
#include <iostream>
#include <memory>
#include <string>
using std::cout;
using std::endl;
using std::unique_ptr;
using std::shared_ptr;
using std::string;

struct FpCloser
{
	void operator()(FILE * fp)
	{
		if(fp)
		{
			fclose(fp);
			cout << ">> fclose call success " << endl;
		}
	}
};

void test0(void)
{
	unique_ptr<FILE, FpCloser> up(fopen("test.txt", "w+"), FpCloser());

	string msg = "hello,world";
	fwrite(msg.c_str(), 1, msg.size(), up.get());
}

void test1(void)
{
	shared_ptr<FILE> sp(fopen("test.txt", "w+"), FpCloser());//生成临时对象，在shared_ptr的构造函数中，调用FpCloser（*fp）；
	string msg = "hello,shenzhen";
	fwrite(msg.c_str(), 1, msg.size(), sp.get());
}
 
int main(void)
{
	//test0();
	test1();
	return 0;
}
