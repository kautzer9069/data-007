{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Fixedsys;}
{\f17\fmodern\fcharset255\fprq1{\*\panose 00000000000000000000}Terminal;}{\f18\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Small Fonts;}{\f19\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f20\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f21\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f22\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}
{\f23\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f24\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f25\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}
{\f26\fmodern\fcharset2\fprq1{\*\panose 020f0509020204020304}OCR-A BT;}{\f27\fmodern\fcharset2\fprq1{\*\panose 020b0609020202020204}OCR-B-10 BT;}{\f28\froman\fcharset0\fprq2{\*\panose 02090504030505020304}AmerType Md BT;}
{\f29\fswiss\fcharset0\fprq2{\*\panose 020b0402020204020303}Futura Lt BT;}{\f30\fswiss\fcharset0\fprq2{\*\panose 020b0903020204020204}Futura XBlk BT;}{\f31\froman\fcharset0\fprq2{\*\panose 02020502050305020303}GoudyOlSt BT;}
{\f32\froman\fcharset0\fprq2{\*\panose 0207060307050a020302}BernhardMod BT;}{\f33\froman\fcharset0\fprq2{\*\panose 02030604050306020704}Benguiat Bk BT;}{\f34\fswiss\fcharset0\fprq2{\*\panose 020b0602020204020303}Futura Md BT;}
{\f35\fdecor\fcharset0\fprq2{\*\panose 040409040d0702020402}Allegro BT;}{\f36\fscript\fcharset0\fprq2{\*\panose 03020702030807050705}TypoUpright BT;}{\f37\froman\fcharset0\fprq2{\*\panose 02040503050506040803}ZapfEllipt BT;}
{\f38\fdecor\fcharset0\fprq2{\*\panose 04030205020b02020502}BernhardFashion BT;}{\f39\froman\fcharset0\fprq2{\*\panose 02080503040505020303}Souvenir Lt BT;}{\f40\froman\fcharset0\fprq2{\*\panose 0204050203030b020204}Dauphin;}
{\f41\fswiss\fcharset0\fprq2{\*\panose 020e0705020203020404}CopprplGoth Bd BT;}{\f42\fswiss\fcharset0\fprq2{\*\panose 020b0807040502030204}Zurich BlkEx BT;}{\f43\fswiss\fcharset0\fprq2{\*\panose 020b0505020202020204}Zurich Ex BT;}
{\f44\fdecor\fcharset0\fprq2{\*\panose 04060505040702020204}Charlesworth;}{\f45\fdecor\fcharset0\fprq2{\*\panose 04040807060d02020704}Bremen Bd BT;}{\f46\fswiss\fcharset0\fprq2{\*\panose 020b0807020203060204}BankGothic Md BT;}
{\f47\fdecor\fcharset0\fprq2{\*\panose 04020604050203030203}GoudyHandtooled BT;}{\f48\fdecor\fcharset0\fprq2{\*\panose 040409050d0b02020403}FuturaBlack BT;}{\f49\fswiss\fcharset2\fprq2{\*\panose 020b0603050302020204}CommonBullets;}
{\f50\fscript\fcharset0\fprq2{\*\panose 03080702020302020206}OzHandicraft BT;}{\f51\fscript\fcharset0\fprq2{\*\panose 03030702030607090b03}ShelleyAllegro BT;}{\f52\froman\fcharset0\fprq2{\*\panose 02060303030505020204}Serifa Th BT;}
{\f53\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Staccato222 BT;}{\f54\fswiss\fcharset0\fprq2{\*\panose 020b0402020202020204}AvantGarde Bk BT;}{\f55\fswiss\fcharset0\fprq2{\*\panose 020b0602020202020204}AvantGarde Md BT;}
{\f56\froman\fcharset0\fprq2{\*\panose 02060503030505020204}Serifa BT;}{\f57\fdecor\fcharset0\fprq2{\*\panose 040b0500000000000000}LithographLight;}{\f58\fswiss\fcharset0\fprq2{\*\panose 020d0902020204020204}Kabel Ult BT;}
{\f59\fswiss\fcharset0\fprq2{\*\panose 020b0708030702060204}Swiss911 XCm BT;}{\f60\fswiss\fcharset0\fprq2{\*\panose 020d0402020204020904}Kabel Bk BT;}{\f61\fswiss\fcharset0\fprq2{\*\panose 020b0602020204020204}Humanst521 BT;}
{\f62\froman\fcharset0\fprq2{\*\panose 02040603050505090303}CentSchbook BT;}{\f63\froman\fcharset0\fprq2{\*\panose 02020604080705020303}DeVinne BT;}{\f64\froman\fcharset0\fprq2{\*\panose 02020604070705020303}DeVinne Txt BT;}
{\f65\froman\fcharset0\fprq2{\*\panose 020a0503050306020303}Latin725 BT;}{\f66\froman\fcharset0\fprq2{\*\panose 020a0603060306020303}Latin725 Md BT;}{\f67\fswiss\fcharset0\fprq2{\*\panose 020e0503050506020204}Amerigo BT;}
{\f68\fswiss\fcharset0\fprq2{\*\panose 020e0603050506020204}Amerigo Md BT;}{\f69\froman\fcharset0\fprq2{\*\panose 020a0506040505030204}Oranda Cn BT;}{\f70\fswiss\fcharset0\fprq2{\*\panose 020b0603030504020204}Humnst777 BT;}
{\f71\froman\fcharset0\fprq2{\*\panose 02040603040506030204}HumstSlab712 BT;}{\f72\froman\fcharset0\fprq2{\*\panose 02040804050506030204}HumstSlab712 Blk BT;}{\f73\fswiss\fcharset0\fprq2{\*\panose 020b0806020204020204}Futura XBlkCn BT;}
{\f74\fswiss\fcharset0\fprq2{\*\panose 020b0803030504030204}Humnst777 Blk BT;}{\f75\froman\fcharset0\fprq2{\*\panose 020a0603030505030204}Oranda BT;}{\f76\fswiss\fcharset0\fprq2{\*\panose 020b05060202020a0204}NewsGoth Cn BT;}
{\f77\fswiss\fcharset0\fprq2{\*\panose 020b0703020203090204}NewsGoth BT;}{\f78\fswiss\fcharset0\fprq2{\*\panose 020b0406020203020204}NewsGoth Lt BT;}{\f79\fswiss\fcharset0\fprq2{\*\panose 020b0408020202030204}NewsGoth XCn BT;}
{\f80\fswiss\fcharset0\fprq2{\*\panose 020b0504020202060204}Square721 BT;}{\f81\fswiss\fcharset0\fprq2{\*\panose 020b0406020202050204}Square721 Cn BT;}{\f82\fswiss\fcharset0\fprq2{\*\panose 020b0907030502060203}Square721 BdEx BT;}
{\f83\fswiss\fcharset0\fprq2{\*\panose 020b08040202020d0204}Square 721;}{\f84\fswiss\fcharset0\fprq2{\*\panose 020b0704020202060204}Square721 Dm;}{\f85\fswiss\fcharset0\fprq2{\*\panose 020b0507020202060203}Square721 Ex BT;}
{\f86\fswiss\fcharset0\fprq2{\*\panose 020b0402030504020204}Humnst777 Lt BT;}{\f87\fswiss\fcharset0\fprq2{\*\panose 020b0904020202060204}Square 721 Blk;}{\f88\fswiss\fcharset0\fprq2{\*\panose 020d0502030503020204}Humanst531 BT;}
{\f89\fswiss\fcharset0\fprq2{\*\panose 020b0803030503020204}Humanst531 Blk BT;}{\f90\fswiss\fcharset0\fprq2{\*\panose 020b0903030503020204}Humanst531 UBlk BT;}{\f91\fswiss\fcharset0\fprq2{\*\panose 020b0702020204020204}Futura Hv BT;}
{\f92\fswiss\fcharset0\fprq2{\*\panose 020b0408020204030204}Futura LtCn BT;}{\f93\fswiss\fcharset0\fprq2{\*\panose 020b0506020204030203}Futura MdCn BT;}{\f94\fswiss\fcharset0\fprq2{\*\panose 020b0706020204020204}Futura BdCn BT;}
{\f95\fswiss\fcharset0\fprq2{\*\panose 020b0502020204020303}Futura Bk BT;}{\f96\fswiss\fcharset0\fprq2{\*\panose 020b0903020204090204}Futura XBlkIt BT;}{\f97\fswiss\fcharset0\fprq2{\*\panose 020b0806020204090204}Futura XBlkCnIt BT;}
{\f98\fswiss\fcharset0\fprq2{\*\panose 020b0907030509030804}Eras Bd BT;}{\f99\fswiss\fcharset0\fprq2{\*\panose 020b0502030509030804}Eras Bk BT;}{\f100\fswiss\fcharset0\fprq2{\*\panose 020b0402030509030804}Eras Lt BT;}
{\f101\fswiss\fcharset0\fprq2{\*\panose 020b0502030509030804}Eras Md BT;}{\f102\fswiss\fcharset0\fprq2{\*\panose 020b0403020202020204}Folio Lt BT;}{\f103\fswiss\fcharset0\fprq2{\*\panose 020b0907030509030204}Eras Ult BT;}
{\f104\froman\fcharset0\fprq2{\*\panose 02070604070506020204}Fenice BT;}{\f105\fswiss\fcharset0\fprq2{\*\panose 020b0503030502020204}Folio Bk BT;}{\f106\fswiss\fcharset0\fprq2{\*\panose 020b0608020202050204}NewsGoth BdXCn BT;}
{\f107\fswiss\fcharset0\fprq2{\*\panose 020b0603030502020204}Folio Md BT;}{\f108\fswiss\fcharset0\fprq2{\*\panose 020b0904040702040204}Folio XBd BT;}{\f109\fswiss\fcharset0\fprq2{\*\panose 020b0504030503020204}FrnkGothITC Bk BT;}
{\f110\fswiss\fcharset0\fprq2{\*\panose 020b0904030502020204}FrnkGothITC Hv BT;}{\f111\fswiss\fcharset0\fprq2{\*\panose 020b0904030502090204}FrnkGothITC HvIt BT;}{\f112\fswiss\fcharset0\fprq2{\*\panose 020b0706020202060204}Folio BdCn BT;}
{\f113\froman\fcharset0\fprq2{\*\panose 02040503050506090203}Charter BT;}{\f114\fswiss\fcharset0\fprq2{\*\panose 020b0403020202030204}Zurich Lt BT;}{\f115\fswiss\fcharset0\fprq2{\*\panose 020b0408020202060204}Zurich LtXCn BT;}
{\f116\fswiss\fcharset0\fprq2{\*\panose 020b0603020202030204}Zurich BT;}{\f117\fswiss\fcharset0\fprq2{\*\panose 020b0907040502030204}Zurich UBlkEx BT;}{\f118\fswiss\fcharset0\fprq2{\*\panose 020b0904040502030204}Zurich XBlk BT;}
{\f119\froman\fcharset0\fprq2{\*\panose 02070502060505020903}Transit521 BT;}{\f120\froman\fcharset0\fprq2{\*\panose 02060504050505030204}Schadow BT;}{\f121\froman\fcharset0\fprq2{\*\panose 02060503050505030804}Schadow Lt BT;}
{\f122\froman\fcharset0\fprq2{\*\panose 02060706050705050204}Schadow BlkCn BT;}{\f123\froman\fcharset0\fprq2{\*\panose 02060904050705030204}Schadow Blk BT;}{\f124\fswiss\fcharset0\fprq2{\*\panose 020b0406020202040204}Zurich LtCn BT;}
{\f125\fswiss\fcharset0\fprq2{\*\panose 020b0508030702060204}Zurich XCn BT;}{\f126\froman\fcharset0\fprq2{\*\panose 02040703050506020203}Charter Bd BT;}{\f127\froman\fcharset0\fprq2{\*\panose 020a0602050506030304}Kuenst480 BT;}
{\f128\froman\fcharset0\fprq2{\*\panose 020a0803060505030204}Kuenst480 Blk BT;}{\f129\fswiss\fcharset0\fprq2{\*\panose 020b0502050508020304}ZapfHumnst BT;}{\f130\fswiss\fcharset0\fprq2{\*\panose 020b0506020202040204}Zurich Cn BT;}
{\f131\fswiss\fcharset0\fprq2{\*\panose 020b0805050508020204}ZapfHumnst Ult BT;}{\f132\fswiss\fcharset0\fprq2{\*\panose 020b0602050508020304}ZapfHumnst Dm BT;}{\f133\fswiss\fcharset0\fprq2{\*\panose 020b0707030502020204}Zurich BdEx BT;}
{\f134\fswiss\fcharset0\fprq2{\*\panose 020b0804030502030204}Zurich Blk BT;}{\f135\fswiss\fcharset0\fprq2{\*\panose 020b0706030502050204}Zurich BdXCn BT;}{\f136\fswiss\fcharset0\fprq2{\*\panose 020d0402020204020903}Geometr231 BT;}
{\f137\fswiss\fcharset0\fprq2{\*\panose 020b0802020204020303}Geometr415 Blk BT;}{\f138\fswiss\fcharset0\fprq2{\*\panose 020b0502020204020303}Geometr415 Lt BT;}{\f139\fswiss\fcharset0\fprq2{\*\panose 020d0302020203020903}Geometr231 Lt BT;}
{\f140\fswiss\fcharset0\fprq2{\*\panose 020b0602020204020303}Geometr415 Md BT;}{\f141\froman\fcharset0\fprq2{\*\panose 02040502050306020404}MattAntique BT;}{\f142\froman\fcharset0\fprq2{\*\panose 02060503050505020304}Candida BT;}
{\f143\fswiss\fcharset0\fprq2{\*\panose 020d0602020204020304}Kabel Md BT;}{\f144\fswiss\fcharset0\fprq2{\*\panose 020d0702020204020304}Kabel Dm BT;}{\f145\fswiss\fcharset0\fprq2{\*\panose 020d0802020204020304}Kabel Bd;}
{\f146\froman\fcharset0\fprq2{\*\panose 0206050304050a020404}Leawood Bk BT;}{\f147\fswiss\fcharset0\fprq2{\*\panose 020d0802020204020204}Geometr231 Hv BT;}{\f148\fswiss\fcharset0\fprq2{\*\panose 020d0802020204020304}Grizzly BT;}
{\f149\fswiss\fcharset0\fprq2{\*\panose 020b0706020204030204}Incised901 BdCn BT;}{\f150\fswiss\fcharset0\fprq2{\*\panose 020b0703020204030204}Incised901 Bd BT;}{\f151\fswiss\fcharset0\fprq2{\*\panose 020b0a070405030a0204}Incised901 NdIt BT;}
{\f152\fswiss\fcharset0\fprq2{\*\panose 020b0a07040503030204}Incised901 Nd BT;}{\f153\froman\fcharset0\fprq2{\*\panose 02060403030505020204}Serifa Lt BT;}{\f154\fswiss\fcharset0\fprq2{\*\panose 020b0603020204030204}Incised901 BT;}
{\f155\froman\fcharset0\fprq2{\*\panose 02060804040505020204}Serifa Blk BT;}{\f156\froman\fcharset0\fprq2{\*\panose 02060706030705040204}Serifa BdCn BT;}{\f157\fswiss\fcharset0\fprq2{\*\panose 02040706040505040204}Humanst521 Lt BT;}
{\f158\froman\fcharset0\fprq2{\*\panose 02020606070506020304}GarmdITC BkCn BT;}{\f159\froman\fcharset0\fprq2{\*\panose 02020702060506020304}GarmdITC Bk BT;}{\f160\fswiss\fcharset0\fprq2{\*\panose 020b0902020204020204}Humanst521 XBd BT;}
{\f161\fswiss\fcharset0\fprq2{\*\panose 020b0904030504030204}Incised901 Ct BT;}{\f162\fswiss\fcharset0\fprq2{\*\panose 020b0506020204030204}Humanst521 Cn BT;}{\f163\fswiss\fcharset0\fprq2{\*\panose 020b0906030504020204}Humanst521 XBdCn BT;}
{\f164\fswiss\fcharset0\fprq2{\*\panose 020b0403020204030204}Incised901 Lt BT;}{\f165\fswiss\fcharset0\fprq2{\*\panose 020b0a03020203020204}Humanst521 UBd BT;}{\f166\froman\fcharset0\fprq2{\*\panose 02090602060506020304}Arrus BT;}
{\f167\froman\fcharset0\fprq2{\*\panose 02090805060506020404}Arrus Blk BT;}{\f168\froman\fcharset0\fprq2{\*\panose 02070803090706020303}BauerBodni Blk BT;}{\f169\fdecor\fcharset0\fprq2{\*\panose 04020605080202020203}BauerBodni Titl BT;}
{\f170\froman\fcharset0\fprq2{\*\panose 02030803070706020403}CaslonOldFace Hv BT;}{\f171\froman\fcharset0\fprq2{\*\panose 02020602070506020304}NewBskvll BT;}{\f172\froman\fcharset0\fprq2{\*\panose 02030602060505020403}CaslonOldFace BT;}
{\f173\froman\fcharset0\fprq2{\*\panose 0202060206050b020a04}Galliard BT;}{\f174\froman\fcharset0\fprq2{\*\panose 02020602060506020403}ElegaGarmnd BT;}{\f175\froman\fcharset0\fprq2{\*\panose 02030603060506020403}Caslon540 BT;}
{\f176\froman\fcharset0\fprq2{\*\panose 02070603080706020303}BauerBodni BT;}{\f177\froman\fcharset0\fprq2{\*\panose 02070806080906020303}BauerBodni BlkCn BT;}{\f178\froman\fcharset0\fprq2{\*\panose 02070706080706020303}BauerBodni BdCn BT;}
{\f179\froman\fcharset0\fprq2{\*\panose 02070803080706020303}Bodoni Bd BT;}{\f180\froman\fcharset0\fprq2{\*\panose 02070706070706020303}Bodoni BdCn BT;}{\f181\froman\fcharset0\fprq2{\*\panose 02070703070706020303}Bodoni BT;}
{\f182\froman\fcharset0\fprq2{\*\panose 02070603070706020303}Bodoni Bk BT;}{\f183\froman\fcharset0\fprq2{\*\panose 02030703070706020403}Caslon Bd BT;}{\f184\froman\fcharset0\fprq2{\*\panose 02090502020206020303}Schneidler BT;}
{\f185\froman\fcharset0\fprq2{\*\panose 0202060206050b020903}AmeriGarmnd BT;}{\f186\froman\fcharset0\fprq2{\*\panose 02090402020206020303}Schneidler Lt BT;}{\f187\froman\fcharset0\fprq2{\*\panose 02020602060306020a03}Aldine401 BT;}
{\f188\froman\fcharset0\fprq2{\*\panose 02040603050505020403}Cheltenhm BT;}{\f189\froman\fcharset0\fprq2{\*\panose 02040606050705020403}Cheltenhm BdCn BT;}{\f190\froman\fcharset0\fprq2{\*\panose 02040703050705090403}Cheltenhm BdItHd BT;}
{\f191\froman\fcharset0\fprq2{\*\panose 02040703050705020403}Cheltenhm BdHd BT;}{\f192\froman\fcharset0\fprq2{\*\panose 02090805050506020203}Schneidler Blk BT;}{\f193\froman\fcharset0\fprq2{\*\panose 02030503070506020404}Caslon224 Bk BT;}
{\f194\froman\fcharset0\fprq2{\*\panose 02020a07060505020203}Lapidary333 Blk BT;}{\f195\froman\fcharset0\fprq2{\*\panose 0207090308050a030404}Carmina Blk BT;}{\f196\froman\fcharset0\fprq2{\*\panose 0207050206030a030404}Carmina Lt BT;}
{\f197\fswiss\fcharset0\fprq2{\*\panose 020e0503030505020404}Novarese Bk BT;}{\f198\froman\fcharset0\fprq2{\*\panose 0207060206030a030404}Carmina Md BT;}{\f199\froman\fcharset0\fprq2{\*\panose 02040504060705020304}Century725 BT;}
{\f200\froman\fcharset0\fprq2{\*\panose 02040904070705020304}Century725 Blk BT;}{\f201\froman\fcharset0\fprq2{\*\panose 02040506070705020204}Century725 Cn BT;}{\f202\froman\fcharset0\fprq2{\*\panose 02040806070705020304}Century725 BdCn BT;}
{\f203\froman\fcharset0\fprq2{\*\panose 02030502030305020302}DellaRobbia BT;}{\f204\froman\fcharset0\fprq2{\*\panose 02020602050506020403}ClassGarmnd BT;}{\f205\froman\fcharset0\fprq2{\*\panose 02020602060505020803}Lapidary333 BT;}
{\f206\froman\fcharset0\fprq2{\*\panose 02090602040506020303}Schneidler Md BT;}{\f207\froman\fcharset0\fprq2{\*\panose 02040606050705020403}Cheltenhm XBdCn BT;}{\f208\froman\fcharset0\fprq2{\*\panose 02040604050705020304}CenturyExpd BT;}
{\f209\froman\fcharset0\fprq2{\*\panose 02040603050505020404}ChelthmITC Bk BT;}{\f210\froman\fcharset0\fprq2{\*\panose 0202060205030b020303}Venetian301 Dm BT;}{\f211\froman\fcharset0\fprq2{\*\panose 02020702050305020303}GoudyOlSt XBd BT;}
{\f212\froman\fcharset0\fprq2{\*\panose 0202050205030b020303}Venetian301 BT;}{\f213\froman\fcharset0\fprq2{\*\panose 02040606060705020303}CentSchbook BdCn BT;}{\f214\froman\fcharset0\fprq2{\*\panose 02040502050505030904}ZapfCalligr BT;}
{\f215\froman\fcharset0\fprq2{\*\panose 02020602050306020403}OrigGarmnd BT;}{\f216\froman\fcharset0\fprq2{\*\panose 02060806020205050403}GeoSlab703 XBdCn BT;}{\f217\fswiss\fcharset0\fprq2{\*\panose 020e0602020208030404}GoudySans Md BT;}
{\f218\froman\fcharset0\fprq2{\*\panose 02060804020205090404}GeoSlab703 XBdIt BT;}{\f219\fswiss\fcharset0\fprq2{\*\panose 020e090202020a0a0404}GoudySans BlkIt BT;}{\f220\froman\fcharset0\fprq2{\*\panose 02060403020205020403}GeoSlab703 Lt BT;}
{\f221\froman\fcharset0\fprq2{\*\panose 02060806030705040404}Stymie XBdCn BT;}{\f222\froman\fcharset0\fprq2{\*\panose 02060506020205050403}GeoSlab703 MdCn BT;}{\f223\froman\fcharset0\fprq2{\*\panose 02060603020205020403}GeoSlab703 Md BT;}
{\f224\fswiss\fcharset0\fprq2{\*\panose 020e0402020208020404}GoudySans Lt BT;}{\f225\froman\fcharset0\fprq2{\*\panose 02060903040705020404}Stymie XBd BT;}{\f226\froman\fcharset0\fprq2{\*\panose 02060803020205020404}LubalGraph Bd BT;}
{\f227\froman\fcharset0\fprq2{\*\panose 02060603020205020404}LubalGraph Md BT;}{\f228\froman\fcharset0\fprq2{\*\panose 02060403020205020404}LubalGraph Bk BT;}{\f229\froman\fcharset0\fprq2{\*\panose 02060302020205020404}LubalGraph XLt BT;}
{\f230\froman\fcharset0\fprq2{\*\panose 02060806030906060203}SquareSlab711 Bd BT;}{\f231\froman\fcharset0\fprq2{\*\panose 02060403020205020403}Stymie Lt BT;}{\f232\froman\fcharset0\fprq2{\*\panose 02060506020206060203}SquareSlab711 Lt BT;}
{\f233\fswiss\fcharset0\fprq2{\*\panose 020e0902020208030404}GoudySans Blk BT;}{\f234\froman\fcharset0\fprq2{\*\panose 02060804020205020404}GeoSlab703 XBd BT;}{\f235\froman\fcharset0\fprq2{\*\panose 02060603020205020403}Stymie Md BT;}
{\f236\froman\fcharset0\fprq2{\*\panose 0209080305050a020404}Seagull Hv BT;}{\f237\fswiss\fcharset0\fprq2{\*\panose 020e0603030505020404}Quorum Md BT;}{\f238\froman\fcharset0\fprq2{\*\panose 0209050604050a020404}Seagull Lt BT;}
{\f239\froman\fcharset0\fprq2{\*\panose 02060502050305020504}Belwe Lt BT;}{\f240\froman\fcharset0\fprq2{\*\panose 02020504070506020904}Americana BT;}{\f241\froman\fcharset0\fprq2{\*\panose 02060903050305020504}Belwe Bd BT;}
{\f242\froman\fcharset0\fprq2{\*\panose 02060806050305020504}Belwe Cn BT;}{\f243\froman\fcharset0\fprq2{\*\panose 0209060304050a020404}Seagull Md BT;}{\f244\froman\fcharset0\fprq2{\*\panose 02020803070706020304}Americana XBdCn BT;}
{\f245\fswiss\fcharset0\fprq2{\*\panose 020e0804040705030404}Quorum Blk BT;}{\f246\froman\fcharset0\fprq2{\*\panose 02040503030506020204}Korinna BT;}{\f247\froman\fcharset0\fprq2{\*\panose 02020804070706020304}Americana XBd BT;}
{\f248\fswiss\fcharset0\fprq2{\*\panose 020e0306020205020404}Quorum Lt BT;}{\f249\fscript\fcharset0\fprq2{\*\panose 03020702040502020203}Lydian BT;}{\f250\froman\fcharset0\fprq2{\*\panose 02090503060705020403}Tiffany Lt BT;}
{\f251\froman\fcharset0\fprq2{\*\panose 0208090304070b020404}Cooper BlkHd BT;}{\f252\froman\fcharset0\fprq2{\*\panose 0208090405030b090404}Cooper BlkIt BT;}{\f253\froman\fcharset0\fprq2{\*\panose 0208090305070b090404}Cooper BlkItHd BT;}
{\f254\froman\fcharset0\fprq2{\*\panose 0208090404030b020404}Cooper Blk BT;}{\f255\fdecor\fcharset0\fprq2{\*\panose 04020905040803040203}Cooper BlkOul BT;}{\f256\froman\fcharset0\fprq2{\*\panose 0208050304030b020404}Cooper Lt BT;}
{\f257\froman\fcharset0\fprq2{\*\panose 02090907090705090403}Tiffany HvIt BT;}{\f258\froman\fcharset0\fprq2{\*\panose 02090907080705020403}Tiffany Hv BT;}{\f259\froman\fcharset0\fprq2{\*\panose 0208060305030b020404}Cooper Md BT;}
{\f260\froman\fcharset0\fprq2{\*\panose 02050604050505020204}BookmanITC Lt BT;}{\f261\froman\fcharset0\fprq2{\*\panose 02090603050305020704}Caxton Bk BT;}{\f262\froman\fcharset0\fprq2{\*\panose 02090503050305090704}Caxton Lt BT;}
{\f263\froman\fcharset0\fprq2{\*\panose 02040602050505020204}Mirarae BT;}{\f264\fscript\fcharset0\fprq2{\*\panose 03030602040507090c03}Embassy BT;}{\f265\fscript\fcharset0\fprq2{\*\panose 03030502040506070602}Ribbon131 BT;}
{\f266\fscript\fcharset0\fprq2{\*\panose 03020402040405090205}Liberty BT;}{\f267\fscript\fcharset0\fprq2{\*\panose 03020602040606070306}Ribbon131 Bd BT;}{\f268\fscript\fcharset0\fprq2{\*\panose 03020802040502060804}Cataneo BT;}
{\f269\fscript\fcharset0\fprq2{\*\panose 030304020505040d0d05}EnglischeSchT;}{\f270\fscript\fcharset0\fprq2{\*\panose 03040602040406080504}BernhardTango BT;}{\f271\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}VivaldiD;}
{\f272\fscript\fcharset0\fprq2{\*\panose 03030803040807090c04}CommercialScript BT;}{\f273\fscript\fcharset0\fprq2{\*\panose 03020702040403020804}ZapfChan Md BT;}{\f274\fscript\fcharset0\fprq2{\*\panose 03020702040507090a04}Amazone BT;}
{\f275\fscript\fcharset0\fprq2{\*\panose 03020702040403080804}ZapfChan MdIt BT;}{\f276\fscript\fcharset0\fprq2{\*\panose 03030602030607090b05}Snell BT;}{\f277\fscript\fcharset0\fprq2{\*\panose 030306020406070f0b05}ShelleyVolante BT;}
{\f278\fscript\fcharset0\fprq2{\*\panose 030306020304040d0d03}English157 BT;}{\f279\fscript\fcharset0\fprq2{\*\panose 030302020405070d0405}Lucia BT;}{\f280\fscript\fcharset0\fprq2{\*\panose 030306020506040d0d05}EnglischeSchTDemBol;}
{\f281\fscript\fcharset0\fprq2{\*\panose 030304020408070d0d05}KunstlerschreibschDMed;}{\f282\fscript\fcharset0\fprq2{\*\panose 030304020408070d0d05}Alexei Copperplate;}{\f283\fscript\fcharset0\fprq2{\*\panose 03030802040907090b04}Snell Blk BT;}
{\f284\fscript\fcharset0\fprq2{\*\panose 03030702040707090b04}Snell Bd BT;}{\f285\fscript\fcharset0\fprq2{\*\panose 030305020406070d0d05}KunstlerschreibschDBol;}{\f286\fscript\fcharset0\fprq2{\*\panose 030306020505070f0a05}FlemishScript BT;}
{\f287\fscript\fcharset0\fprq2{\*\panose 03030602030607080b05}ShelleyAndante BT;}{\f288\fscript\fcharset0\fprq2{\*\panose 03020902040503020804}ZapfChan Bd BT;}{\f289\fscript\fcharset0\fprq2{\*\panose 03020702040507040404}Gando BT;}
{\f290\fscript\fcharset0\fprq2{\*\panose 03020802040503020804}ZapfChan Dm BT;}{\f291\fscript\fcharset0\fprq2{\*\panose 03020702040502060804}Cataneo Lt BT;}{\f292\fscript\fcharset0\fprq2{\*\panose 03020802040502070804}Cataneo Swash BT;}
{\f293\fscript\fcharset0\fprq2{\*\panose 03080402030202060204}Van Dijk;}{\f294\fscript\fcharset0\fprq2{\*\panose 03080802040407030304}BrodyD;}{\f295\fscript\fcharset0\fprq2{\*\panose 03050502030202060b05}QuillScript;}
{\f296\fswiss\fcharset0\fprq2{\*\panose 020e0502060305020804}BibleScrT;}{\f297\fdecor\fcharset0\fprq2{\*\panose 04030a07091002020d03}NevisonCasD;}{\f298\fscript\fcharset0\fprq2{\*\panose 03090702050506080605}Pepper;}
{\f299\fscript\fcharset0\fprq2{\*\panose 03050502040202020b03}Technical;}{\f300\fscript\fcharset0\fprq2{\*\panose 03050402020407070905}VladimirScrD;}{\f301\fscript\fcharset0\fprq2{\*\panose 03090702060502030205}President;}
{\f302\fdecor\fcharset0\fprq2{\*\panose 04030805031002020d02}LasVegasD;}{\f303\fscript\fcharset0\fprq2{\*\panose 03090702030407020404}Staccato555 BT;}{\f304\fdecor\fcharset0\fprq2{\*\panose 04030a07091002020d03}MotterFemD;}
{\f305\fscript\fcharset0\fprq2{\*\panose 03020702040803070205}DiskusDMed;}{\f306\fscript\fcharset0\fprq2{\*\panose 03060802040302020203}Formal436 BT;}{\f307\fscript\fcharset0\fprq2{\*\panose 03060502040706060305}SloganD;}
{\f308\fscript\fcharset0\fprq2{\*\panose 03080402040206030403}Freehand591 BT;}{\f309\fscript\fcharset0\fprq2{\*\panose 03080802040402060304}Freehand471 BT;}{\f310\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}BrushScript BT;}
{\f311\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush738 BT;}{\f312\fswiss\fcharset0\fprq2{\*\panose 020f0b06030406020904}FlashDBol;}{\f313\fscript\fcharset0\fprq2{\*\panose 03050602040405050b04}MurrayHill Bd BT;}
{\f314\fmodern\fcharset0\fprq1{\*\panose 020f0409030106070c04}EnviroD;}{\f315\fscript\fcharset0\fprq2{\*\panose 03080802040207080305}Kaufmann Bd BT;}{\f316\fscript\fcharset0\fprq2{\*\panose 03080502030307080303}Kaufmann BT;}
{\f317\fscript\fcharset0\fprq2{\*\panose 03020802040302030502}TimeScrDMed;}{\f318\fscript\fcharset0\fprq2{\*\panose 03020602040302030502}TimeScrDLig;}{\f319\fscript\fcharset0\fprq2{\*\panose 03050502040202020203}Kids;}
{\f320\fscript\fcharset0\fprq2{\*\panose 03060902030402060201}Balloon XBd BT;}{\f321\fswiss\fcharset0\fprq2{\*\panose 020d0b08060102060804}FlashDLig;}{\f322\fscript\fcharset0\fprq2{\*\panose 03020902040302030502}TimeScrDBol;}
{\f323\fscript\fcharset0\fprq2{\*\panose 03060402020202060201}Balloon Lt BT;}{\f324\fscript\fcharset0\fprq2{\*\panose 03060702020302060201}Balloon Bd BT;}{\f325\fscript\fcharset0\fprq2{\*\panose 03090802040305080204}Brush455 BT;}
{\f326\fswiss\fcharset0\fprq2{\*\panose 020b0801030703030804}HandelGotDBol;}{\f327\fdecor\fcharset0\fprq2{\*\panose 04050603080702020203}Onyx BT;}{\f328\fdecor\fcharset0\fprq2{\*\panose 04040b07060d02020704}Bremen Blk BT;}
{\f329\fdecor\fcharset0\fprq2{\*\panose 04020907030b03040203}Eras Contour;}{\f330\fswiss\fcharset0\fprq2{\*\panose 020b0604030704030204}HandelGotDLig;}{\f331\fdecor\fcharset0\fprq2{\*\panose 04030805030b02020c03}HandelGothic BT;}
{\f332\fswiss\fcharset0\fprq2{\*\panose 020b0608020202060204}Swiss911 UCm BT;}{\f333\fswiss\fcharset0\fprq2{\*\panose 020e0905050706070204}SerpentineDBol;}{\f334\fdecor\fcharset0\fprq2{\*\panose 04050302030b02020502}HuxleyVertical BT;}
{\f335\fswiss\fcharset0\fprq2{\*\panose 020b0806030502050204}Swiss921 BT;}{\f336\fswiss\fcharset0\fprq2{\*\panose 020b0706030702060204}Compacta Bd BT;}{\f337\fswiss\fcharset0\fprq2{\*\panose 020e0602040504020404}FrizQuadrata BT;}
{\f338\fswiss\fcharset0\fprq2{\*\panose 020b0904040702060204}Compacta Blk BT;}{\f339\froman\fcharset0\fprq2{\*\panose 02070606050705020204}Modern735 BT;}{\f340\fswiss\fcharset0\fprq2{\*\panose 020b0608030702060204}Compacta BT;}
{\f341\fswiss\fcharset0\fprq2{\*\panose 020b0508030702060204}Compacta Lt BT;}{\f342\fdecor\fcharset0\fprq2{\*\panose 04050302050b02020204}Empire BT;}{\f343\fdecor\fcharset0\fprq2{\*\panose 04050504050b02020302}Bedrock;}
{\f344\froman\fcharset0\fprq2{\*\panose 02030903070706020404}Grouch BT;}{\f345\fdecor\fcharset0\fprq2{\*\panose 04020705050202090202}CasablancaAntique;}{\f346\froman\fcharset0\fprq2{\*\panose 02070a04090905020304}Normande BT;}
{\f347\fdecor\fcharset0\fprq2{\*\panose 04020605080303030203}CaslonOpnface BT;}{\f348\fswiss\fcharset0\fprq2{\*\panose 020e0603020205020301}LibertyD;}{\f349\fdecor\fcharset0\fprq2{\*\panose 04050403040a02020204}Latin XCn BT;}
{\f350\fswiss\fcharset0\fprq2{\*\panose 020e0608090905030204}ArsisDReg;}{\f351\fdecor\fcharset0\fprq2{\*\panose 04020805080302030202}Atlantic Inline;}{\f352\fswiss\fcharset0\fprq2{\*\panose 020e0502030304020904}Flareserif821 Lt BT;}
{\f353\froman\fcharset0\fprq2{\*\panose 02070904090705020304}Firenze;}{\f354\froman\fcharset0\fprq2{\*\panose 02070904090905090304}Normande It BT;}{\f355\fdecor\fcharset0\fprq2{\*\panose 04040905080b02020502}Broadway BT;}
{\f356\fswiss\fcharset0\fprq2{\*\panose 020e0602030304020304}Flareserif821 BT;}{\f357\fdecor\fcharset0\fprq2{\*\panose 04020504060303070b02}Emboss;}{\f358\fdecor\fcharset0\fprq2{\*\panose 04040905090b02050503}BroadwayEngraved BT;}
{\f359\fdecor\fcharset0\fprq2{\*\panose 04020705040a02060702}AlgerianD;}{\f360\fmodern\fcharset0\fprq1{\*\panose 020e0b09050105020204}LatinWidD;}{\f361\fswiss\fcharset0\fprq2{\*\panose 020b0706020207050204}Aurora BdCn BT;}
{\f362\fswiss\fcharset0\fprq2{\*\panose 020b0508020207060204}Aurora Cn BT;}{\f363\fswiss\fcharset0\fprq2{\*\panose 020b0906040404020203}Honda;}{\f364\fdecor\fcharset0\fprq2{\*\panose 04040905020b02020604}Informal011 Blk BT;}
{\f365\fdecor\fcharset0\fprq2{\*\panose 04040805020b02020604}Informal011 BT;}{\f366\fswiss\fcharset0\fprq2{\*\panose 020b0608020202050204}AlternateGothic2 BT;}{\f367\fswiss\fcharset0\fprq2{\*\panose 020f0806020204040204}Gothic821 Cn BT;}
{\f368\fdecor\fcharset0\fprq2{\*\panose 04020906050602070202}Vineta BT;}{\f369\fdecor\fcharset0\fprq2{\*\panose 04020905020b02070204}BuxomD;}{\f370\fdecor\fcharset0\fprq2{\*\panose 04030805020b02020404}StopD;}
{\f371\fswiss\fcharset0\fprq2{\*\panose 020c0903060902020604}BinnerD;}{\f372\fscript\fcharset0\fprq2{\*\panose 03020902040302020201}Cancun;}{\f373\fdecor\fcharset0\fprq2{\*\panose 04020a07050402060204}Decorated035 BT;}
{\f374\fdecor\fcharset0\fprq2{\*\panose 04030805020d02020802}Revue BT;}{\f375\fdecor\fcharset0\fprq2{\*\panose 04040704020b02020304}Machine BT;}{\f376\fswiss\fcharset0\fprq2{\*\panose 020e0907030506060204}MicrogrammaDBolExt;}
{\f377\fswiss\fcharset0\fprq2{\*\panose 020b0607030502060204}MicrogrammaDMedExt;}{\f378\fdecor\fcharset0\fprq2{\*\panose 04020405020b03070202}Umbra BT;}{\f379\fdecor\fcharset0\fprq2{\*\panose 04020704050a03050202}ChiselD;}
{\f380\fdecor\fcharset0\fprq2{\*\panose 04040804050f02020703}Amelia BT;}{\f381\fdecor\fcharset0\fprq2{\*\panose 04030b05090b02020304}Glacier;}{\f382\fdecor\fcharset0\fprq2{\*\panose 04030405020b02020803}Harpoon;}
{\f383\fdecor\fcharset0\fprq2{\*\panose 04020a05040b03040203}Geometr885 BT;}{\f384\fdecor\fcharset0\fprq2{\*\panose 04020905030b03060b04}BusterD;}{\f385\fdecor\fcharset0\fprq2{\*\panose 04040505040b02020303}Orbit-B BT;}
{\f386\fswiss\fcharset0\fprq2{\*\panose 020b0703020203020301}GlaserSteD;}{\f387\fdecor\fcharset0\fprq2{\*\panose 04040604020b02020304}LcdD;}{\f388\fdecor\fcharset0\fprq2{\*\panose 04030a050d0b02020402}Traffic;}
{\f389\fdecor\fcharset0\fprq2{\*\panose 04020906050602060203}GoldMine;}{\f390\fdecor\fcharset0\fprq2{\*\panose 040b09050c0b03040804}ShotgunBlanks BT;}{\f391\fdecor\fcharset0\fprq2{\*\panose 040b09050c0b02020804}Shotgun BT;}
{\f392\fdecor\fcharset0\fprq2{\*\panose 04090705040e02020304}Davida Bd BT;}{\f393\fdecor\fcharset0\fprq2{\*\panose 04040905070f02020302}CountdownD;}{\f394\fdecor\fcharset0\fprq2{\*\panose 04020905080603030204}DextorOutD;}
{\f395\fdecor\fcharset0\fprq2{\*\panose 04020a05070602050202}DextorD;}{\f396\fdecor\fcharset0\fprq2{\*\panose 04020705040202020203}IceAgeD;}{\f397\fdecor\fcharset0\fprq2{\*\panose 04020605030b03030202}Uptight Neon;}
{\f398\fdecor\fcharset0\fprq2{\*\panose 040407040d0f02020702}CroissantD;}{\f399\fdecor\fcharset0\fprq2{\*\panose 04040505040b02020303}Keypunch;}{\f400\fdecor\fcharset0\fprq2{\*\panose 04040805030f03040703}Pipeline;}
{\f401\fdecor\fcharset0\fprq2{\*\panose 04040905020b02050503}PumpTriD;}{\f402\fdecor\fcharset0\fprq2{\*\panose 04040805070f03050b03}Eklektic;}{\f403\fdecor\fcharset0\fprq2{\*\panose 04030405020b02020c04}Busorama Md BT;}
{\f404\fswiss\fcharset0\fprq2{\*\panose 020e0602050706020204}CastleT;}{\f405\fdecor\fcharset0\fprq2{\*\panose 04030605020b02020c03}Bauhaus Md BT;}{\f406\fdecor\fcharset0\fprq2{\*\panose 04030405020b02020c03}Bauhaus Lt BT;}
{\f407\fswiss\fcharset0\fprq2{\*\panose 020b0702020204020303}HoratioDBol;}{\f408\fswiss\fcharset0\fprq2{\*\panose 020b0302020203020303}HoratioDLig;}{\f409\fswiss\fcharset0\fprq2{\*\panose 020d0506020203030b03}Architecture;}
{\f410\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Griffon;}{\f411\fdecor\fcharset0\fprq2{\*\panose 04050502020b03070b03}GriffonShadow;}{\f412\fdecor\fcharset0\fprq2{\*\panose 04030905020b02020c03}Bauhaus Hv BT;}
{\f413\fswiss\fcharset0\fprq2{\*\panose 020e0902050906030204}CastleTUlt;}{\f414\fswiss\fcharset0\fprq2{\*\panose 020b0402040704020204}CastleTLig;}{\f415\fswiss\fcharset0\fprq2{\*\panose 020b0602020203020303}HoratioDMed;}
{\f416\froman\fcharset0\fprq2{\*\panose 02040604040505020204}Clarendon Lt BT;}{\f417\fdecor\fcharset0\fprq2{\*\panose 040409050d0802020404}Stencil BT;}{\f418\fdecor\fcharset0\fprq2{\*\panose 04030405050702020802}UnivrstyRoman BT;}
{\f419\froman\fcharset0\fprq2{\*\panose 02040704040505020204}Clarendon BT;}{\f420\fdecor\fcharset0\fprq2{\*\panose 04020805090705050504}Galleria;}{\f421\fdecor\fcharset0\fprq2{\*\panose 04030605060702020802}UnivrstyRoman Bd BT;}
{\f422\froman\fcharset0\fprq2{\*\panose 02040905050505020204}Clarendon Blk BT;}{\f423\froman\fcharset0\fprq2{\*\panose 02040606040505040204}Clarendon Cn BT;}{\f424\froman\fcharset0\fprq2{\*\panose 02040804050505020204}Clarendon Hv BT;}
{\f425\fdecor\fcharset0\fprq2{\*\panose 040404030b0602020202}PTBarnum BT;}{\f426\fdecor\fcharset0\fprq2{\*\panose 040506030a0602020202}Playbill BT;}{\f427\fdecor\fcharset0\fprq2{\*\panose 040b0500000000000000}Lithograph;}
{\f428\fdecor\fcharset0\fprq2{\*\panose 04040804060802020203}Bernhard BdCn BT;}{\f429\fdecor\fcharset0\fprq2{\*\panose 04020604030602040204}PrincetownD;}{\f430\froman\fcharset0\fprq2{\*\panose 02060904040702080204}Princetown Solid;}
{\f431\fnil\fcharset0\fprq2{\*\panose 01010408050501070804}OldTowneNo536D;}{\f432\fdecor\fcharset0\fprq2{\*\panose 04030705050b02020a02}Exotc350 DmBd BT;}{\f433\fdecor\fcharset0\fprq2{\*\panose 04030805050b02020a03}Exotc350 Bd BT;}
{\f434\fswiss\fcharset0\fprq2{\*\panose 020b0607020203060204}BankGothic Lt BT;}{\f435\fdecor\fcharset0\fprq2{\*\panose 04030505050b02020a03}Exotc350 Lt BT;}{\f436\froman\fcharset0\fprq2{\*\panose 02070606080505020c02}Mona Lisa Solid;}
{\f437\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Mona Lisa Recut;}{\f438\fdecor\fcharset0\fprq2{\*\panose 04030605060b02020503}Parisian BT;}{\f439\fswiss\fcharset0\fprq2{\*\panose 020e0705030506020404}Newtext Rg BT;}
{\f440\fdecor\fcharset0\fprq2{\*\panose 04030305020f02020504}CircleD;}{\f441\froman\fcharset0\fprq2{\*\panose 02040507060505020304}EngravrsRoman BT;}{\f442\fswiss\fcharset0\fprq2{\*\panose 020e0907030503020404}CopprplGoth Hv BT;}
{\f443\fswiss\fcharset0\fprq2{\*\panose 020e0604020203020404}CopprplGoth Cn BT;}{\f444\froman\fcharset0\fprq2{\*\panose 02040302060705020202}NicolasCocTReg;}{\f445\fswiss\fcharset0\fprq2{\*\panose 020e0302060705020202}NicolasCocTBla;}
{\f446\fswiss\fcharset0\fprq2{\*\panose 020e0704020203020404}CopprplGoth BdCn BT;}{\f447\froman\fcharset0\fprq2{\*\panose 0207040206040a020304}Calligraph810 BT;}{\f448\fscript\fcharset0\fprq2{\*\panose 03040702030605080505}Stuyvesant BT;}
{\f449\fscript\fcharset0\fprq2{\*\panose 03020502050402020204}Carleton;}{\f450\froman\fcharset0\fprq2{\*\panose 020a0807080705020304}EngravrsRoman Bd BT;}{\f451\fscript\fcharset0\fprq2{\*\panose 03060702050402020204}Calligraph421 BT;}
{\f452\fscript\fcharset0\fprq2{\*\panose 03030602040405080b03}Nuptial BT;}{\f453\fdecor\fcharset0\fprq2{\*\panose 04020705070203030203}CloisterOpenFace BT;}{\f454\fswiss\fcharset0\fprq2{\*\panose 020b0502050309030a04}BakerSignet BT;}
{\f455\fswiss\fcharset0\fprq2{\*\panose 020e0605020203020404}CopprplGoth BT;}{\f456\fdecor\fcharset0\fprq2{\*\panose 04030405040b02020a04}CamelliaD;}{\f457\fswiss\fcharset0\fprq2{\*\panose 020b0402020203020901}PlazaDReg;}
{\f458\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Freestyle Script;}{\f459\fdecor\fcharset0\fprq2{\*\panose 04030405020b02020c02}Brisk;}{\f460\fscript\fcharset0\fprq2{\*\panose 03080802030307080304}Freehand521 BT;}
{\f461\fscript\fcharset0\fprq2{\*\panose 03080702030306060204}Freehand575 BT;}{\f462\fswiss\fcharset0\fprq2{\*\panose 020d0406040103070904}SquireD;}{\f463\fscript\fcharset0\fprq2{\*\panose 03060702040402020b04}Freefrm721 BT;}
{\f464\fscript\fcharset0\fprq2{\*\panose 03060902050402020b05}Freefrm721 Blk BT;}{\f465\fscript\fcharset0\fprq2{\*\panose 03020802040402020204}ProseAntique;}{\f466\fscript\fcharset0\fprq2{\*\panose 03050602040403080205}PhyllisD;}
{\f467\fscript\fcharset0\fprq2{\*\panose 03020602040506080505}Piranesi It BT;}{\f468\fscript\fcharset0\fprq2{\*\panose 03050602040202020b01}Cosmic;}{\f469\fscript\fcharset0\fprq2{\*\panose 03080802020302020203}MisterEarl BT;}
{\f470\fdecor\fcharset0\fprq2{\*\panose 040407050a0b02020803}CosmicTwo;}{\f471\fdecor\fcharset0\fprq2{\*\panose 04090a08080902020204}Thunderbird BT;}{\f472\fscript\fcharset0\fprq2{\*\panose 03060902030302020204}DomCasual BT;}
{\f473\fscript\fcharset0\fprq2{\*\panose 03080702040302070203}BlacklightD;}{\f474\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Beehive;}{\f475\fdecor\fcharset0\fprq2{\*\panose 04040704021002020703}Tango BT;}
{\f476\fdecor\fcharset0\fprq2{\*\panose 04030604020f02060d02}HarlowD;}{\f477\fdecor\fcharset0\fprq2{\*\panose 040407060b0602020602}Expo;}{\f478\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}LinePrinter;}
{\f479\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times;}{\f480\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f481\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Condensed;}
{\f482\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive;}{\f483\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Garamond;}{\f484\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}CG Omega;}
{\f485\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Medium;}{\f486\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Extra Bold;}{\f487\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon Condensed;}
{\f488\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Coronet;}{\f489\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}{\f490\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Marigold;}
{\f581\fswiss\fcharset238\fprq2 Tahoma CE;}{\f582\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f584\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f585\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f586\fswiss\fcharset186\fprq2 Tahoma Baltic;}
{\f611\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f612\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f614\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f615\fmodern\fcharset162\fprq1 Lucida Console Tur;}
{\f629\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f630\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f632\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f633\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f634\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f635\fswiss\fcharset238\fprq2 Verdana CE;}{\f636\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f638\fswiss\fcharset161\fprq2 Verdana Greek;}{\f639\fswiss\fcharset162\fprq2 Verdana Tur;}{\f640\fswiss\fcharset186\fprq2 Verdana Baltic;}
{\f663\froman\fcharset162\fprq2 AmerType Md BT Tur;}{\f669\fswiss\fcharset162\fprq2 Futura Lt BT Tur;}{\f675\fswiss\fcharset162\fprq2 Futura XBlk BT Tur;}{\f681\froman\fcharset162\fprq2 GoudyOlSt BT Tur;}
{\f687\froman\fcharset162\fprq2 BernhardMod BT Tur;}{\f693\froman\fcharset162\fprq2 Benguiat Bk BT Tur;}{\f699\fswiss\fcharset162\fprq2 Futura Md BT Tur;}{\f705\fdecor\fcharset162\fprq2 Allegro BT Tur;}{\f711\fscript\fcharset162\fprq2 TypoUpright BT Tur;}
{\f717\froman\fcharset162\fprq2 ZapfEllipt BT Tur;}{\f723\fdecor\fcharset162\fprq2 BernhardFashion BT Tur;}{\f729\froman\fcharset162\fprq2 Souvenir Lt BT Tur;}{\f741\fswiss\fcharset162\fprq2 CopprplGoth Bd BT Tur;}
{\f747\fswiss\fcharset162\fprq2 Zurich BlkEx BT Tur;}{\f753\fswiss\fcharset162\fprq2 Zurich Ex BT Tur;}{\f765\fdecor\fcharset162\fprq2 Bremen Bd BT Tur;}{\f771\fswiss\fcharset162\fprq2 BankGothic Md BT Tur;}
{\f777\fdecor\fcharset162\fprq2 GoudyHandtooled BT Tur;}{\f783\fdecor\fcharset162\fprq2 FuturaBlack BT Tur;}{\f795\fscript\fcharset162\fprq2 OzHandicraft BT Tur;}{\f801\fscript\fcharset162\fprq2 ShelleyAllegro BT Tur;}
{\f807\froman\fcharset162\fprq2 Serifa Th BT Tur;}{\f813\fscript\fcharset162\fprq2 Staccato222 BT Tur;}{\f819\fswiss\fcharset162\fprq2 AvantGarde Bk BT Tur;}{\f825\fswiss\fcharset162\fprq2 AvantGarde Md BT Tur;}
{\f831\froman\fcharset162\fprq2 Serifa BT Tur;}{\f843\fswiss\fcharset162\fprq2 Kabel Ult BT Tur;}{\f849\fswiss\fcharset162\fprq2 Swiss911 XCm BT Tur;}{\f855\fswiss\fcharset162\fprq2 Kabel Bk BT Tur;}{\f861\fswiss\fcharset162\fprq2 Humanst521 BT Tur;}
{\f867\froman\fcharset162\fprq2 CentSchbook BT Tur;}{\f873\froman\fcharset162\fprq2 DeVinne BT Tur;}{\f879\froman\fcharset162\fprq2 DeVinne Txt BT Tur;}{\f885\froman\fcharset162\fprq2 Latin725 BT Tur;}{\f891\froman\fcharset162\fprq2 Latin725 Md BT Tur;}
{\f897\fswiss\fcharset162\fprq2 Amerigo BT Tur;}{\f903\fswiss\fcharset162\fprq2 Amerigo Md BT Tur;}{\f909\froman\fcharset162\fprq2 Oranda Cn BT Tur;}{\f915\fswiss\fcharset162\fprq2 Humnst777 BT Tur;}{\f921\froman\fcharset162\fprq2 HumstSlab712 BT Tur;}
{\f927\froman\fcharset162\fprq2 HumstSlab712 Blk BT Tur;}{\f933\fswiss\fcharset162\fprq2 Futura XBlkCn BT Tur;}{\f939\fswiss\fcharset162\fprq2 Humnst777 Blk BT Tur;}{\f945\froman\fcharset162\fprq2 Oranda BT Tur;}
{\f951\fswiss\fcharset162\fprq2 NewsGoth Cn BT Tur;}{\f957\fswiss\fcharset162\fprq2 NewsGoth BT Tur;}{\f963\fswiss\fcharset162\fprq2 NewsGoth Lt BT Tur;}{\f969\fswiss\fcharset162\fprq2 NewsGoth XCn BT Tur;}
{\f975\fswiss\fcharset162\fprq2 Square721 BT Tur;}{\f981\fswiss\fcharset162\fprq2 Square721 Cn BT Tur;}{\f987\fswiss\fcharset162\fprq2 Square721 BdEx BT Tur;}{\f1005\fswiss\fcharset162\fprq2 Square721 Ex BT Tur;}
{\f1011\fswiss\fcharset162\fprq2 Humnst777 Lt BT Tur;}{\f1023\fswiss\fcharset162\fprq2 Humanst531 BT Tur;}{\f1029\fswiss\fcharset162\fprq2 Humanst531 Blk BT Tur;}{\f1035\fswiss\fcharset162\fprq2 Humanst531 UBlk BT Tur;}
{\f1041\fswiss\fcharset162\fprq2 Futura Hv BT Tur;}{\f1047\fswiss\fcharset162\fprq2 Futura LtCn BT Tur;}{\f1053\fswiss\fcharset162\fprq2 Futura MdCn BT Tur;}{\f1059\fswiss\fcharset162\fprq2 Futura BdCn BT Tur;}
{\f1065\fswiss\fcharset162\fprq2 Futura Bk BT Tur;}{\f1071\fswiss\fcharset162\fprq2 Futura XBlkIt BT Tur;}{\f1077\fswiss\fcharset162\fprq2 Futura XBlkCnIt BT Tur;}{\f1083\fswiss\fcharset162\fprq2 Eras Bd BT Tur;}
{\f1089\fswiss\fcharset162\fprq2 Eras Bk BT Tur;}{\f1095\fswiss\fcharset162\fprq2 Eras Lt BT Tur;}{\f1101\fswiss\fcharset162\fprq2 Eras Md BT Tur;}{\f1107\fswiss\fcharset162\fprq2 Folio Lt BT Tur;}{\f1113\fswiss\fcharset162\fprq2 Eras Ult BT Tur;}
{\f1119\froman\fcharset162\fprq2 Fenice BT Tur;}{\f1125\fswiss\fcharset162\fprq2 Folio Bk BT Tur;}{\f1131\fswiss\fcharset162\fprq2 NewsGoth BdXCn BT Tur;}{\f1137\fswiss\fcharset162\fprq2 Folio Md BT Tur;}{\f1143\fswiss\fcharset162\fprq2 Folio XBd BT Tur;}
{\f1149\fswiss\fcharset162\fprq2 FrnkGothITC Bk BT Tur;}{\f1155\fswiss\fcharset162\fprq2 FrnkGothITC Hv BT Tur;}{\f1161\fswiss\fcharset162\fprq2 FrnkGothITC HvIt BT Tur;}{\f1167\fswiss\fcharset162\fprq2 Folio BdCn BT Tur;}
{\f1173\froman\fcharset162\fprq2 Charter BT Tur;}{\f1179\fswiss\fcharset162\fprq2 Zurich Lt BT Tur;}{\f1185\fswiss\fcharset162\fprq2 Zurich LtXCn BT Tur;}{\f1191\fswiss\fcharset162\fprq2 Zurich BT Tur;}
{\f1197\fswiss\fcharset162\fprq2 Zurich UBlkEx BT Tur;}{\f1203\fswiss\fcharset162\fprq2 Zurich XBlk BT Tur;}{\f1209\froman\fcharset162\fprq2 Transit521 BT Tur;}{\f1215\froman\fcharset162\fprq2 Schadow BT Tur;}
{\f1221\froman\fcharset162\fprq2 Schadow Lt BT Tur;}{\f1227\froman\fcharset162\fprq2 Schadow BlkCn BT Tur;}{\f1233\froman\fcharset162\fprq2 Schadow Blk BT Tur;}{\f1239\fswiss\fcharset162\fprq2 Zurich LtCn BT Tur;}
{\f1245\fswiss\fcharset162\fprq2 Zurich XCn BT Tur;}{\f1251\froman\fcharset162\fprq2 Charter Bd BT Tur;}{\f1257\froman\fcharset162\fprq2 Kuenst480 BT Tur;}{\f1263\froman\fcharset162\fprq2 Kuenst480 Blk BT Tur;}
{\f1269\fswiss\fcharset162\fprq2 ZapfHumnst BT Tur;}{\f1275\fswiss\fcharset162\fprq2 Zurich Cn BT Tur;}{\f1281\fswiss\fcharset162\fprq2 ZapfHumnst Ult BT Tur;}{\f1287\fswiss\fcharset162\fprq2 ZapfHumnst Dm BT Tur;}
{\f1293\fswiss\fcharset162\fprq2 Zurich BdEx BT Tur;}{\f1299\fswiss\fcharset162\fprq2 Zurich Blk BT Tur;}{\f1305\fswiss\fcharset162\fprq2 Zurich BdXCn BT Tur;}{\f1311\fswiss\fcharset162\fprq2 Geometr231 BT Tur;}
{\f1317\fswiss\fcharset162\fprq2 Geometr415 Blk BT Tur;}{\f1323\fswiss\fcharset162\fprq2 Geometr415 Lt BT Tur;}{\f1329\fswiss\fcharset162\fprq2 Geometr231 Lt BT Tur;}{\f1335\fswiss\fcharset162\fprq2 Geometr415 Md BT Tur;}
{\f1341\froman\fcharset162\fprq2 MattAntique BT Tur;}{\f1347\froman\fcharset162\fprq2 Candida BT Tur;}{\f1353\fswiss\fcharset162\fprq2 Kabel Md BT Tur;}{\f1359\fswiss\fcharset162\fprq2 Kabel Dm BT Tur;}{\f1371\froman\fcharset162\fprq2 Leawood Bk BT Tur;}
{\f1377\fswiss\fcharset162\fprq2 Geometr231 Hv BT Tur;}{\f1383\fswiss\fcharset162\fprq2 Grizzly BT Tur;}{\f1389\fswiss\fcharset162\fprq2 Incised901 BdCn BT Tur;}{\f1395\fswiss\fcharset162\fprq2 Incised901 Bd BT Tur;}
{\f1401\fswiss\fcharset162\fprq2 Incised901 NdIt BT Tur;}{\f1407\fswiss\fcharset162\fprq2 Incised901 Nd BT Tur;}{\f1413\froman\fcharset162\fprq2 Serifa Lt BT Tur;}{\f1419\fswiss\fcharset162\fprq2 Incised901 BT Tur;}
{\f1425\froman\fcharset162\fprq2 Serifa Blk BT Tur;}{\f1431\froman\fcharset162\fprq2 Serifa BdCn BT Tur;}{\f1437\fswiss\fcharset162\fprq2 Humanst521 Lt BT Tur;}{\f1443\froman\fcharset162\fprq2 GarmdITC BkCn BT Tur;}
{\f1449\froman\fcharset162\fprq2 GarmdITC Bk BT Tur;}{\f1455\fswiss\fcharset162\fprq2 Humanst521 XBd BT Tur;}{\f1461\fswiss\fcharset162\fprq2 Incised901 Ct BT Tur;}{\f1467\fswiss\fcharset162\fprq2 Humanst521 Cn BT Tur;}
{\f1473\fswiss\fcharset162\fprq2 Humanst521 XBdCn BT Tur;}{\f1479\fswiss\fcharset162\fprq2 Incised901 Lt BT Tur;}{\f1485\fswiss\fcharset162\fprq2 Humanst521 UBd BT Tur;}{\f1491\froman\fcharset162\fprq2 Arrus BT Tur;}
{\f1497\froman\fcharset162\fprq2 Arrus Blk BT Tur;}{\f1503\froman\fcharset162\fprq2 BauerBodni Blk BT Tur;}{\f1509\fdecor\fcharset162\fprq2 BauerBodni Titl BT Tur;}{\f1515\froman\fcharset162\fprq2 CaslonOldFace Hv BT Tur;}
{\f1521\froman\fcharset162\fprq2 NewBskvll BT Tur;}{\f1527\froman\fcharset162\fprq2 CaslonOldFace BT Tur;}{\f1533\froman\fcharset162\fprq2 Galliard BT Tur;}{\f1539\froman\fcharset162\fprq2 ElegaGarmnd BT Tur;}
{\f1545\froman\fcharset162\fprq2 Caslon540 BT Tur;}{\f1551\froman\fcharset162\fprq2 BauerBodni BT Tur;}{\f1557\froman\fcharset162\fprq2 BauerBodni BlkCn BT Tur;}{\f1563\froman\fcharset162\fprq2 BauerBodni BdCn BT Tur;}
{\f1569\froman\fcharset162\fprq2 Bodoni Bd BT Tur;}{\f1575\froman\fcharset162\fprq2 Bodoni BdCn BT Tur;}{\f1581\froman\fcharset162\fprq2 Bodoni BT Tur;}{\f1587\froman\fcharset162\fprq2 Bodoni Bk BT Tur;}{\f1593\froman\fcharset162\fprq2 Caslon Bd BT Tur;}
{\f1599\froman\fcharset162\fprq2 Schneidler BT Tur;}{\f1605\froman\fcharset162\fprq2 AmeriGarmnd BT Tur;}{\f1611\froman\fcharset162\fprq2 Schneidler Lt BT Tur;}{\f1617\froman\fcharset162\fprq2 Aldine401 BT Tur;}
{\f1623\froman\fcharset162\fprq2 Cheltenhm BT Tur;}{\f1629\froman\fcharset162\fprq2 Cheltenhm BdCn BT Tur;}{\f1635\froman\fcharset162\fprq2 Cheltenhm BdItHd BT Tur;}{\f1641\froman\fcharset162\fprq2 Cheltenhm BdHd BT Tur;}
{\f1647\froman\fcharset162\fprq2 Schneidler Blk BT Tur;}{\f1653\froman\fcharset162\fprq2 Caslon224 Bk BT Tur;}{\f1659\froman\fcharset162\fprq2 Lapidary333 Blk BT Tur;}{\f1665\froman\fcharset162\fprq2 Carmina Blk BT Tur;}
{\f1671\froman\fcharset162\fprq2 Carmina Lt BT Tur;}{\f1677\fswiss\fcharset162\fprq2 Novarese Bk BT Tur;}{\f1683\froman\fcharset162\fprq2 Carmina Md BT Tur;}{\f1689\froman\fcharset162\fprq2 Century725 BT Tur;}
{\f1695\froman\fcharset162\fprq2 Century725 Blk BT Tur;}{\f1701\froman\fcharset162\fprq2 Century725 Cn BT Tur;}{\f1707\froman\fcharset162\fprq2 Century725 BdCn BT Tur;}{\f1713\froman\fcharset162\fprq2 DellaRobbia BT Tur;}
{\f1719\froman\fcharset162\fprq2 ClassGarmnd BT Tur;}{\f1725\froman\fcharset162\fprq2 Lapidary333 BT Tur;}{\f1731\froman\fcharset162\fprq2 Schneidler Md BT Tur;}{\f1737\froman\fcharset162\fprq2 Cheltenhm XBdCn BT Tur;}
{\f1743\froman\fcharset162\fprq2 CenturyExpd BT Tur;}{\f1749\froman\fcharset162\fprq2 ChelthmITC Bk BT Tur;}{\f1755\froman\fcharset162\fprq2 Venetian301 Dm BT Tur;}{\f1761\froman\fcharset162\fprq2 GoudyOlSt XBd BT Tur;}
{\f1767\froman\fcharset162\fprq2 Venetian301 BT Tur;}{\f1773\froman\fcharset162\fprq2 CentSchbook BdCn BT Tur;}{\f1779\froman\fcharset162\fprq2 ZapfCalligr BT Tur;}{\f1785\froman\fcharset162\fprq2 OrigGarmnd BT Tur;}
{\f1791\froman\fcharset162\fprq2 GeoSlab703 XBdCn BT Tur;}{\f1797\fswiss\fcharset162\fprq2 GoudySans Md BT Tur;}{\f1803\froman\fcharset162\fprq2 GeoSlab703 XBdIt BT Tur;}{\f1809\fswiss\fcharset162\fprq2 GoudySans BlkIt BT Tur;}
{\f1815\froman\fcharset162\fprq2 GeoSlab703 Lt BT Tur;}{\f1821\froman\fcharset162\fprq2 Stymie XBdCn BT Tur;}{\f1827\froman\fcharset162\fprq2 GeoSlab703 MdCn BT Tur;}{\f1833\froman\fcharset162\fprq2 GeoSlab703 Md BT Tur;}
{\f1839\fswiss\fcharset162\fprq2 GoudySans Lt BT Tur;}{\f1845\froman\fcharset162\fprq2 Stymie XBd BT Tur;}{\f1851\froman\fcharset162\fprq2 LubalGraph Bd BT Tur;}{\f1857\froman\fcharset162\fprq2 LubalGraph Md BT Tur;}
{\f1863\froman\fcharset162\fprq2 LubalGraph Bk BT Tur;}{\f1869\froman\fcharset162\fprq2 LubalGraph XLt BT Tur;}{\f1875\froman\fcharset162\fprq2 SquareSlab711 Bd BT Tur;}{\f1881\froman\fcharset162\fprq2 Stymie Lt BT Tur;}
{\f1887\froman\fcharset162\fprq2 SquareSlab711 Lt BT Tur;}{\f1893\fswiss\fcharset162\fprq2 GoudySans Blk BT Tur;}{\f1899\froman\fcharset162\fprq2 GeoSlab703 XBd BT Tur;}{\f1905\froman\fcharset162\fprq2 Stymie Md BT Tur;}
{\f1911\froman\fcharset162\fprq2 Seagull Hv BT Tur;}{\f1917\fswiss\fcharset162\fprq2 Quorum Md BT Tur;}{\f1923\froman\fcharset162\fprq2 Seagull Lt BT Tur;}{\f1929\froman\fcharset162\fprq2 Belwe Lt BT Tur;}
{\f1935\froman\fcharset162\fprq2 Americana BT Tur;}{\f1941\froman\fcharset162\fprq2 Belwe Bd BT Tur;}{\f1947\froman\fcharset162\fprq2 Belwe Cn BT Tur;}{\f1953\froman\fcharset162\fprq2 Seagull Md BT Tur;}
{\f1959\froman\fcharset162\fprq2 Americana XBdCn BT Tur;}{\f1965\fswiss\fcharset162\fprq2 Quorum Blk BT Tur;}{\f1971\froman\fcharset162\fprq2 Korinna BT Tur;}{\f1977\froman\fcharset162\fprq2 Americana XBd BT Tur;}
{\f1983\fswiss\fcharset162\fprq2 Quorum Lt BT Tur;}{\f1989\fscript\fcharset162\fprq2 Lydian BT Tur;}{\f1995\froman\fcharset162\fprq2 Tiffany Lt BT Tur;}{\f2001\froman\fcharset162\fprq2 Cooper BlkHd BT Tur;}
{\f2007\froman\fcharset162\fprq2 Cooper BlkIt BT Tur;}{\f2013\froman\fcharset162\fprq2 Cooper BlkItHd BT Tur;}{\f2019\froman\fcharset162\fprq2 Cooper Blk BT Tur;}{\f2025\fdecor\fcharset162\fprq2 Cooper BlkOul BT Tur;}
{\f2031\froman\fcharset162\fprq2 Cooper Lt BT Tur;}{\f2037\froman\fcharset162\fprq2 Tiffany HvIt BT Tur;}{\f2043\froman\fcharset162\fprq2 Tiffany Hv BT Tur;}{\f2049\froman\fcharset162\fprq2 Cooper Md BT Tur;}
{\f2055\froman\fcharset162\fprq2 BookmanITC Lt BT Tur;}{\f2061\froman\fcharset162\fprq2 Caxton Bk BT Tur;}{\f2067\froman\fcharset162\fprq2 Caxton Lt BT Tur;}{\f2073\froman\fcharset162\fprq2 Mirarae BT Tur;}
{\f2079\fscript\fcharset162\fprq2 Embassy BT Tur;}{\f2085\fscript\fcharset162\fprq2 Ribbon131 BT Tur;}{\f2091\fscript\fcharset162\fprq2 Liberty BT Tur;}{\f2097\fscript\fcharset162\fprq2 Ribbon131 Bd BT Tur;}
{\f2103\fscript\fcharset162\fprq2 Cataneo BT Tur;}{\f2109\fscript\fcharset162\fprq2 EnglischeSchT Tur;}{\f2115\fscript\fcharset162\fprq2 BernhardTango BT Tur;}{\f2121\fscript\fcharset162\fprq2 VivaldiD Tur;}
{\f2127\fscript\fcharset162\fprq2 CommercialScript BT Tur;}{\f2133\fscript\fcharset162\fprq2 ZapfChan Md BT Tur;}{\f2139\fscript\fcharset162\fprq2 Amazone BT Tur;}{\f2145\fscript\fcharset162\fprq2 ZapfChan MdIt BT Tur;}
{\f2151\fscript\fcharset162\fprq2 Snell BT Tur;}{\f2157\fscript\fcharset162\fprq2 ShelleyVolante BT Tur;}{\f2163\fscript\fcharset162\fprq2 English157 BT Tur;}{\f2169\fscript\fcharset162\fprq2 Lucia BT Tur;}
{\f2175\fscript\fcharset162\fprq2 EnglischeSchTDemBol Tur;}{\f2181\fscript\fcharset162\fprq2 KunstlerschreibschDMed Tur;}{\f2193\fscript\fcharset162\fprq2 Snell Blk BT Tur;}{\f2199\fscript\fcharset162\fprq2 Snell Bd BT Tur;}
{\f2205\fscript\fcharset162\fprq2 KunstlerschreibschDBol Tur;}{\f2211\fscript\fcharset162\fprq2 FlemishScript BT Tur;}{\f2217\fscript\fcharset162\fprq2 ShelleyAndante BT Tur;}{\f2223\fscript\fcharset162\fprq2 ZapfChan Bd BT Tur;}
{\f2229\fscript\fcharset162\fprq2 Gando BT Tur;}{\f2235\fscript\fcharset162\fprq2 ZapfChan Dm BT Tur;}{\f2241\fscript\fcharset162\fprq2 Cataneo Lt BT Tur;}{\f2259\fscript\fcharset162\fprq2 BrodyD Tur;}{\f2271\fswiss\fcharset162\fprq2 BibleScrT Tur;}
{\f2277\fdecor\fcharset162\fprq2 NevisonCasD Tur;}{\f2295\fscript\fcharset162\fprq2 VladimirScrD Tur;}{\f2307\fdecor\fcharset162\fprq2 LasVegasD Tur;}{\f2313\fscript\fcharset162\fprq2 Staccato555 BT Tur;}{\f2319\fdecor\fcharset162\fprq2 MotterFemD Tur;}
{\f2325\fscript\fcharset162\fprq2 DiskusDMed Tur;}{\f2331\fscript\fcharset162\fprq2 Formal436 BT Tur;}{\f2337\fscript\fcharset162\fprq2 SloganD Tur;}{\f2343\fscript\fcharset162\fprq2 Freehand591 BT Tur;}
{\f2349\fscript\fcharset162\fprq2 Freehand471 BT Tur;}{\f2355\fscript\fcharset162\fprq2 BrushScript BT Tur;}{\f2361\fscript\fcharset162\fprq2 Brush738 BT Tur;}{\f2367\fswiss\fcharset162\fprq2 FlashDBol Tur;}
{\f2373\fscript\fcharset162\fprq2 MurrayHill Bd BT Tur;}{\f2379\fmodern\fcharset162\fprq1 EnviroD Tur;}{\f2385\fscript\fcharset162\fprq2 Kaufmann Bd BT Tur;}{\f2391\fscript\fcharset162\fprq2 Kaufmann BT Tur;}
{\f2397\fscript\fcharset162\fprq2 TimeScrDMed Tur;}{\f2403\fscript\fcharset162\fprq2 TimeScrDLig Tur;}{\f2415\fscript\fcharset162\fprq2 Balloon XBd BT Tur;}{\f2421\fswiss\fcharset162\fprq2 FlashDLig Tur;}{\f2427\fscript\fcharset162\fprq2 TimeScrDBol Tur;}
{\f2433\fscript\fcharset162\fprq2 Balloon Lt BT Tur;}{\f2439\fscript\fcharset162\fprq2 Balloon Bd BT Tur;}{\f2445\fscript\fcharset162\fprq2 Brush455 BT Tur;}{\f2451\fswiss\fcharset162\fprq2 HandelGotDBol Tur;}{\f2457\fdecor\fcharset162\fprq2 Onyx BT Tur;}
{\f2463\fdecor\fcharset162\fprq2 Bremen Blk BT Tur;}{\f2475\fswiss\fcharset162\fprq2 HandelGotDLig Tur;}{\f2481\fdecor\fcharset162\fprq2 HandelGothic BT Tur;}{\f2487\fswiss\fcharset162\fprq2 Swiss911 UCm BT Tur;}
{\f2493\fswiss\fcharset162\fprq2 SerpentineDBol Tur;}{\f2499\fdecor\fcharset162\fprq2 HuxleyVertical BT Tur;}{\f2505\fswiss\fcharset162\fprq2 Swiss921 BT Tur;}{\f2511\fswiss\fcharset162\fprq2 Compacta Bd BT Tur;}
{\f2517\fswiss\fcharset162\fprq2 FrizQuadrata BT Tur;}{\f2523\fswiss\fcharset162\fprq2 Compacta Blk BT Tur;}{\f2529\froman\fcharset162\fprq2 Modern735 BT Tur;}{\f2535\fswiss\fcharset162\fprq2 Compacta BT Tur;}
{\f2541\fswiss\fcharset162\fprq2 Compacta Lt BT Tur;}{\f2547\fdecor\fcharset162\fprq2 Empire BT Tur;}{\f2559\froman\fcharset162\fprq2 Grouch BT Tur;}{\f2571\froman\fcharset162\fprq2 Normande BT Tur;}{\f2577\fdecor\fcharset162\fprq2 CaslonOpnface BT Tur;}
{\f2583\fswiss\fcharset162\fprq2 LibertyD Tur;}{\f2589\fdecor\fcharset162\fprq2 Latin XCn BT Tur;}{\f2595\fswiss\fcharset162\fprq2 ArsisDReg Tur;}{\f2607\fswiss\fcharset162\fprq2 Flareserif821 Lt BT Tur;}
{\f2619\froman\fcharset162\fprq2 Normande It BT Tur;}{\f2625\fdecor\fcharset162\fprq2 Broadway BT Tur;}{\f2631\fswiss\fcharset162\fprq2 Flareserif821 BT Tur;}{\f2643\fdecor\fcharset162\fprq2 BroadwayEngraved BT Tur;}
{\f2649\fdecor\fcharset162\fprq2 AlgerianD Tur;}{\f2655\fmodern\fcharset162\fprq1 LatinWidD Tur;}{\f2661\fswiss\fcharset162\fprq2 Aurora BdCn BT Tur;}{\f2667\fswiss\fcharset162\fprq2 Aurora Cn BT Tur;}
{\f2679\fdecor\fcharset162\fprq2 Informal011 Blk BT Tur;}{\f2685\fdecor\fcharset162\fprq2 Informal011 BT Tur;}{\f2691\fswiss\fcharset162\fprq2 AlternateGothic2 BT Tur;}{\f2697\fswiss\fcharset162\fprq2 Gothic821 Cn BT Tur;}
{\f2703\fdecor\fcharset162\fprq2 Vineta BT Tur;}{\f2709\fdecor\fcharset162\fprq2 BuxomD Tur;}{\f2715\fdecor\fcharset162\fprq2 StopD Tur;}{\f2721\fswiss\fcharset162\fprq2 BinnerD Tur;}{\f2733\fdecor\fcharset162\fprq2 Decorated035 BT Tur;}
{\f2739\fdecor\fcharset162\fprq2 Revue BT Tur;}{\f2745\fdecor\fcharset162\fprq2 Machine BT Tur;}{\f2751\fswiss\fcharset162\fprq2 MicrogrammaDBolExt Tur;}{\f2757\fswiss\fcharset162\fprq2 MicrogrammaDMedExt Tur;}
{\f2763\fdecor\fcharset162\fprq2 Umbra BT Tur;}{\f2769\fdecor\fcharset162\fprq2 ChiselD Tur;}{\f2775\fdecor\fcharset162\fprq2 Amelia BT Tur;}{\f2793\fdecor\fcharset162\fprq2 Geometr885 BT Tur;}{\f2799\fdecor\fcharset162\fprq2 BusterD Tur;}
{\f2805\fdecor\fcharset162\fprq2 Orbit-B BT Tur;}{\f2811\fswiss\fcharset162\fprq2 GlaserSteD Tur;}{\f2817\fdecor\fcharset162\fprq2 LcdD Tur;}{\f2835\fdecor\fcharset162\fprq2 ShotgunBlanks BT Tur;}{\f2841\fdecor\fcharset162\fprq2 Shotgun BT Tur;}
{\f2847\fdecor\fcharset162\fprq2 Davida Bd BT Tur;}{\f2853\fdecor\fcharset162\fprq2 CountdownD Tur;}{\f2859\fdecor\fcharset162\fprq2 DextorOutD Tur;}{\f2865\fdecor\fcharset162\fprq2 DextorD Tur;}{\f2871\fdecor\fcharset162\fprq2 IceAgeD Tur;}
{\f2883\fdecor\fcharset162\fprq2 CroissantD Tur;}{\f2901\fdecor\fcharset162\fprq2 PumpTriD Tur;}{\f2919\fswiss\fcharset162\fprq2 CastleT Tur;}{\f2925\fdecor\fcharset162\fprq2 Bauhaus Md BT Tur;}{\f2931\fdecor\fcharset162\fprq2 Bauhaus Lt BT Tur;}
{\f2937\fswiss\fcharset162\fprq2 HoratioDBol Tur;}{\f2943\fswiss\fcharset162\fprq2 HoratioDLig Tur;}{\f2967\fdecor\fcharset162\fprq2 Bauhaus Hv BT Tur;}{\f2973\fswiss\fcharset162\fprq2 CastleTUlt Tur;}{\f2979\fswiss\fcharset162\fprq2 CastleTLig Tur;}
{\f2985\fswiss\fcharset162\fprq2 HoratioDMed Tur;}{\f2991\froman\fcharset162\fprq2 Clarendon Lt BT Tur;}{\f2997\fdecor\fcharset162\fprq2 Stencil BT Tur;}{\f3003\fdecor\fcharset162\fprq2 UnivrstyRoman BT Tur;}
{\f3009\froman\fcharset162\fprq2 Clarendon BT Tur;}{\f3021\fdecor\fcharset162\fprq2 UnivrstyRoman Bd BT Tur;}{\f3027\froman\fcharset162\fprq2 Clarendon Blk BT Tur;}{\f3033\froman\fcharset162\fprq2 Clarendon Cn BT Tur;}
{\f3039\froman\fcharset162\fprq2 Clarendon Hv BT Tur;}{\f3045\fdecor\fcharset162\fprq2 PTBarnum BT Tur;}{\f3051\fdecor\fcharset162\fprq2 Playbill BT Tur;}{\f3063\fdecor\fcharset162\fprq2 Bernhard BdCn BT Tur;}
{\f3069\fdecor\fcharset162\fprq2 PrincetownD Tur;}{\f3081\fnil\fcharset162\fprq2 OldTowneNo536D Tur;}{\f3087\fdecor\fcharset162\fprq2 Exotc350 DmBd BT Tur;}{\f3093\fdecor\fcharset162\fprq2 Exotc350 Bd BT Tur;}
{\f3099\fswiss\fcharset162\fprq2 BankGothic Lt BT Tur;}{\f3105\fdecor\fcharset162\fprq2 Exotc350 Lt BT Tur;}{\f3123\fdecor\fcharset162\fprq2 Parisian BT Tur;}{\f3129\fswiss\fcharset162\fprq2 Newtext Rg BT Tur;}
{\f3135\fdecor\fcharset162\fprq2 CircleD Tur;}{\f3141\froman\fcharset162\fprq2 EngravrsRoman BT Tur;}{\f3147\fswiss\fcharset162\fprq2 CopprplGoth Hv BT Tur;}{\f3153\fswiss\fcharset162\fprq2 CopprplGoth Cn BT Tur;}
{\f3159\froman\fcharset162\fprq2 NicolasCocTReg Tur;}{\f3165\fswiss\fcharset162\fprq2 NicolasCocTBla Tur;}{\f3171\fswiss\fcharset162\fprq2 CopprplGoth BdCn BT Tur;}{\f3177\froman\fcharset162\fprq2 Calligraph810 BT Tur;}
{\f3183\fscript\fcharset162\fprq2 Stuyvesant BT Tur;}{\f3195\froman\fcharset162\fprq2 EngravrsRoman Bd BT Tur;}{\f3201\fscript\fcharset162\fprq2 Calligraph421 BT Tur;}{\f3207\fscript\fcharset162\fprq2 Nuptial BT Tur;}
{\f3213\fdecor\fcharset162\fprq2 CloisterOpenFace BT Tur;}{\f3219\fswiss\fcharset162\fprq2 BakerSignet BT Tur;}{\f3225\fswiss\fcharset162\fprq2 CopprplGoth BT Tur;}{\f3231\fdecor\fcharset162\fprq2 CamelliaD Tur;}
{\f3237\fswiss\fcharset162\fprq2 PlazaDReg Tur;}{\f3255\fscript\fcharset162\fprq2 Freehand521 BT Tur;}{\f3261\fscript\fcharset162\fprq2 Freehand575 BT Tur;}{\f3267\fswiss\fcharset162\fprq2 SquireD Tur;}{\f3273\fscript\fcharset162\fprq2 Freefrm721 BT Tur;}
{\f3279\fscript\fcharset162\fprq2 Freefrm721 Blk BT Tur;}{\f3291\fscript\fcharset162\fprq2 PhyllisD Tur;}{\f3297\fscript\fcharset162\fprq2 Piranesi It BT Tur;}{\f3309\fscript\fcharset162\fprq2 MisterEarl BT Tur;}
{\f3321\fdecor\fcharset162\fprq2 Thunderbird BT Tur;}{\f3327\fscript\fcharset162\fprq2 DomCasual BT Tur;}{\f3333\fscript\fcharset162\fprq2 BlacklightD Tur;}{\f3345\fdecor\fcharset162\fprq2 Tango BT Tur;}{\f3351\fdecor\fcharset162\fprq2 HarlowD Tur;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\nowidctlpar\widctlpar\adjustright 
\b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\adjustright \b\i\f1\cgrid \sbasedon0 \snext0 heading 2;}{\s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar
\jclisttab\tx720\ls3\ilvl2\adjustright \f1\cgrid \sbasedon0 \snext0 heading 3;}{\s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\adjustright \b\cgrid \sbasedon0 \snext0 heading 4;}{\s5\fi-1008\li1008\sb240\sa60\nowidctlpar\widctlpar
\jclisttab\tx1008\ls3\ilvl4\adjustright \fs22\cgrid \sbasedon0 \snext0 heading 5;}{\s6\fi-1152\li1152\sb240\sa60\nowidctlpar\widctlpar\jclisttab\tx1152\ls3\ilvl5\adjustright \i\fs22\cgrid \sbasedon0 \snext0 heading 6;}{
\s7\fi-1296\li1296\sb240\sa60\nowidctlpar\widctlpar\jclisttab\tx1296\ls3\ilvl6\adjustright \f1\cgrid \sbasedon0 \snext0 heading 7;}{\s8\fi-1440\li1440\sb240\sa60\nowidctlpar\widctlpar\jclisttab\tx1440\ls3\ilvl7\adjustright \i\f1\cgrid \sbasedon0 \snext0 
heading 8;}{\s9\fi-1584\li1584\sb240\sa60\nowidctlpar\widctlpar\jclisttab\tx1584\ls3\ilvl8\adjustright \b\i\f1\fs18\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \cbpat9 \f15\cgrid 
\sbasedon0 \snext15 Document Map;}{\*\cs16 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs17 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{\s18\nowidctlpar\widctlpar
\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 \sbasedon0 \snext18 Preformatted;}{\s19\sb100\sa100\keepn\nowidctlpar\widctlpar\outlinelevel2\adjustright \b\fs36 \sbasedon0 \snext0 H2;}{
\s20\li432\nowidctlpar\widctlpar\adjustright \i\cgrid \sbasedon0 \snext20 Body Text 2;}{\s21\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \cgrid \sbasedon0 \snext21 footer;}{\*\cs22 \additive \sbasedon10 page number;}{\s23\nowidctlpar\widctlpar
\tqc\tx4320\tqr\tx8640\adjustright \cgrid \sbasedon0 \snext23 header;}}{\*\listtable{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid359091074}{\list\listtemplateid882527042\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080
\jclisttab\tx1080 }{\listname ;}\listid401955359}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 
}{\listname ;}\listid1539855566}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1906797567}{\list\listtemplateid-552680248{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\s2\fi-432\li432\jclisttab\tx432 }{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\fi-576\li576\jclisttab\tx576 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers
\'01\'03\'05;}\s3\fi-720\li720\jclisttab\tx720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4\fi-864\li864\jclisttab\tx864 }{\listlevel\levelnfc0
\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5\fi-1008\li1008\jclisttab\tx1008 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6\fi-1152\li1152\jclisttab\tx1152 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7\fi-1296\li1296\jclisttab\tx1296 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\fi-1440\li1440\jclisttab\tx1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\fi-1584\li1584\jclisttab\tx1584 }{\listname ;}\listid2107534399}}{\*\listoverridetable{\listoverride\listid359091074\listoverridecount0\ls1}
{\listoverride\listid1906797567\listoverridecount0\ls2}{\listoverride\listid2107534399\listoverridecount0\ls3}{\listoverride\listid1539855566\listoverridecount0\ls4}{\listoverride\listid401955359\listoverridecount0\ls5}}{\info
{\title PHP: Hackers Paradise}{\author Nathan Wallace}{\operator Nathan Wallace}{\creatim\yr2000\mo2\dy11\hr6\min37}{\revtim\yr2000\mo2\dy11\hr6\min37}{\version2}{\edmins1}{\nofpages23}{\nofwords5236}{\nofchars26708}{\*\company Synop Software}
{\nofcharsws36658}{\vern71}}\widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\footer \pard\plain \s21\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \cgrid {\tab Page }
{\field{\*\fldinst {\cs22  PAGE }}{\fldrslt {\cs22\lang1024 1}}}{\cs22 \tab Nathan Wallace}{
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {
PHP: Hackers Paradise
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par by Nathan Wallace
\par }{\field{\*\fldinst { HYPERLINK http://www.e-gineer.com/articles/php-hackers-paradise.phtml }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003c00000068007400740070003a002f002f007700770077002e0065002d00670069006e006500650072002e0063006f006d002f00610072007400690063006c00650073002f007000680070002d006800610063006b006500720073002d007000610072006100
64006900730065002e007000680074006d006c000000e0c9ea79f9bace118c8200aa004ba90b7800000068007400740070003a002f002f007700770077002e0065002d00670069006e006500650072002e0063006f006d002f00610072007400690063006c00650073002f007000680070002d006800610063006b00650072
0073002d00700061007200610064006900730065002e007000680074006d006c000000}}}{\fldrslt {\cs16\ul\cf2 http://www.e-gineer.com/articles/php-hackers-paradise.phtml}}}{
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 1\tab}}\pard\plain \s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\outlinelevel1\adjustright \b\i\f1\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP (}{\field{\*\fldinst {HYPERLINK "/clickthrough.phtml?sendtourl=http%3A%2F%2Fwww.php.net"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c0000000000000460000370000002f636c69636b7468726f7567682e7068746d6c3f73656e64746f75726c3d687474702533412532462532467777772e7068702e6e657400ffffadde000000000000000000000000000000000000000000
000000}}}{\fldrslt {\cs16\ul\cf2 http://www.php.net}}}{) is a powerful server side web scripting solution. It has quickly grown in popularity and according to the }{\field{\*\fldinst {HYPERLINK "/clickt
hrough.phtml?sendtourl=http%3A%2F%2Fwww.netcraft.com%2FSurvey%2FReports%2F0001%2F"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c0000000000000460000590000002f636c69636b7468726f7567682e7068746d6c3f73656e64746f75726c3d687474702533412532462532467777772e6e657463726166742e636f6d2532465375727665792532465265706f7274732532
463030303125324600ffffadde000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs16\ul\cf2 1999 January Netcraft Web Server Survey}}}{
 PHP is installed on 12.8% of all web sites.  Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in. The goal of the language is to allow web developers to write dynamically generated pages quickly.

\par 
\par Being a good PHP hacker isn\rquote t just about writing single line solutions to complex problems.  For example, web gurus know that speed of coding is much more important than speed of code.  In this article we\rquote 
ll look at techniques that can help you become a better PHP hacker.  We\rquote ll assume that you have a basic knowledge of PHP and databases.
\par 
\par If nothing else, you should leave here with the 3 key ideals for PHP hackers:
\par {\pntext\pard\plain\f3\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {Laziness is a Virtue
\par {\pntext\pard\plain\f3\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {Chameleon Coding
\par {\pntext\pard\plain\f3\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li360\nowidctlpar\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls4\adjustright {Speed of Coding, Not Speed of C
ode
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2\tab}}\pard\plain \s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\outlinelevel1\adjustright \b\i\f1\cgrid {Laziness is a Virtue
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 2.1.1\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par It seems strange to think of a web programmer as lazy.  Most of us work one hundred-hour week\rquote s in our quest to join the gold rush.  In fact, we need to be lazy because we are so busy.
\par 
\par There are two key ways to be lazy.  Firstly always use existing code when it is available, just integrate it into your standards and project.  The second technique is to develop a library of helpful functions that let you be lazy in the future.
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 2.1.2\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Use Other People\rquote s Code
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We need to use laziness to our advantage and PHP is the perfect tool.  PHP was born and raised in an open source environment.  The community holds open source ideals close 
to its heart.  As a result there are thousands of people on the mailing list willing to share their knowledge and code.  There are also many open source PHP projects that you can tap into.
\par I\rquote m not suggesting that you spend all day asking people to write code for you.  But through clever use of the knowledge base, mailing list archives and PHP projects you can save yourself a lot of time.
\par 
\par PHP Knowledge Base \endash  }{\field{\*\fldinst { HYPERLINK http://php.faqts.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001500000068007400740070003a002f002f007000680070002e00660061007100740073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2c00000068007400740070003a002f002f007000680070002e00660061007100740073002e006300
6f006d002f000000}}}{\fldrslt {\cs16\ul\cf2 http://php.faqts.com}}}{
\par 
\par PHP Mailing List Archive - }{\field\fldedit{\*\fldinst { HYPERLINK http://www.progressive-comp.com/Lists/?l=php3-general&r=1&w=2#php3-general }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b020000001f0000004b00000068007400740070003a002f002f007700770077002e00700072006f00670072006500730073006900760065002d0063006f006d0070002e0063006f006d002f004c0069007300740073002f003f006c003d0070006800700033002d00670065006e00
6500720061006c00260072003d003100260077003d003200230070006800700033002d00670065006e006500720061006c000000e0c9ea79f9bace118c8200aa004ba90b7c00000068007400740070003a002f002f007700770077002e00700072006f00670072006500730073006900760065002d0063006f006d0070002e
0063006f006d002f004c0069007300740073002f003f006c003d0070006800700033002d00670065006e006500720061006c00260072003d003100260077003d00320000000d00000070006800700033002d00670065006e006500720061006c000000}}}{\fldrslt {\cs16\ul\cf2 
http://www.progressive-comp.com/Lists/?l=php3-general&r=1&w={\*\bkmkstart _Hlt474816561}2{\*\bkmkend _Hlt474816561}}}}{
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 2.1.3\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Helpful Functions and Classes
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par In this section we will work at developing a library of PHP code which will aid us in future development.  A small amount of work now let\rquote s us be lazy in the future.
\par 
\par Some of this code has been taken from open source PHP projects.  Other parts from the mailing list archives.  In fact, all the work I really needed to do was structure the code into a coherent library of functions.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Database Abstraction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par One of the features / problems with PHP is that it does not have a uniform method for accessing databases.  There are specialized functions for each database PHP is able to conn
ect to.  This is a feature because it allows you to optimize your database code.  It is a problem because it makes your code less portable and increases the learning curve for newcomers.
\par 
\par A number of database wrapper classes have been developed to solve th
is problem.  They provide a uniform set of functions for accessing any database.  Personally I like them because I find it much easier to remember a few simple functions like query and next_record than having to think about database handles, connections a
nd so on.
\par 
\par The most commonly used (and defacto standard) is PHPLib - }{\field\flddirty{\*\fldinst {HYPERLINK "http://phplib.netuse.de"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3200000068007400740070003a002f002f007000680070006c00690062002e006e00650074007500730065002e00640065002f000000}}}{\fldrslt {\cs16\ul\cf2 http://phplib.netuse.de}}}{/
\par 
\par Metabase - }{\field\flddirty{\*\fldinst {HYPERLINK "http://phpclasses.UpperDesign.com/browse.html/package/20"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b7200000068007400740070003a002f002f0070006800700063006c00610073007300650073002e0075007000700065007200640065007300690067006e002e0063006f006d002f00620072006f007700730065002e00
680074006d006c002f007000610063006b006100670065002f00320030000000}}}{\fldrslt {\cs16\ul\cf2 http://phpclasses.UpperDesign.com/browse.html/package/20}}}{
\par 
\par There is also PHPDB - }{\field\fldedit{\*\fldinst {HYPERLINK "http://phpdb.linuxbox.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3600000068007400740070003a002f002f00700068007000640062002e006c0069006e007500780062006f0078002e0063006f006d002f000000}}}{\fldrslt {\cs16\ul\cf2 http://phpdb.linuxbox.com}}}{/

\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.3\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {\page Session Management
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The main purpose of PHPLib is session management.  This allows you to associate data with visitors to your site for the duration of their stay.  This can be useful for remembering options and so on.
\par 
\par PHP4 has session management features built into the PHP internal function library.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.4\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Debugging Variables
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par There is limited debugging support for PHP. This is no Smalltalk environment where you can browse objects and perform methods on them. Instead we need to make creative use of the old, reliable echo statement. 
\par 
\par The first thing we need to be able to do is look at the value of variables. The loose typing of PHP lets us use most variables directly in strings. This is great for numbers and so on, but falls down when we are dealing with arrays and objects. 
\par 
\par The other problem with debugging is that sometimes I'm not even sure what a variable is likely to contain. If I was, there be no need to debug. 
\par 
\par So, lets be smart now and lazy for the rest of time. We can write a function that shows us the type and value of any variable. 
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 function ss_array_as_string (&$array, $column = 0) \{
\par     $str = "Array(<BR>\\n";
\par     while(list($var, $val) = each($array))\{
\par         for ($i = 0; $i < $column+1; $i++)\{
\par             $str .= "&nbsp;&nbsp;&nbsp;&nbsp;";
\par         \}
\par         $str .= $var.' ==> ';
\par         $str .= ss_as_string($val, $column+1)."<BR>\\n";
\par     \}
\par     for ($i = 0; $i < $column; $i++)\{
\par         $str .= "&nbsp;&nbsp;&nbsp;&nbsp;";
\par     \}
\par     return $str.')';
\par \}
\par \page function ss_object_as_string (&$object, $column = 0) \{
\par     if (empty($object->classname)) \{
\par         return "$object";
\par     \}
\par     else \{
\par         $str = $object->classname."(<BR>\\n";
\par         while (list(,$var) = each($object->persistent_slots)) \{
\par             for ($i = 0; $i < $column; $i++)\{
\par                 $str .= "&nbsp;&nbsp;&nbsp;&nbsp;";
\par             \}
\par             global $$var;
\par             $str .= $var.' ==> ';
\par             $str .= ss_as_string($$var, column+1)."<BR>\\n";
\par         \}
\par         for ($i = 0; $i < $column; $i++)\{
\par             $str .= "&nbsp;&nbsp;&nbsp;&nbsp;";
\par         \}
\par         return $str.')';
\par     \}
\par \}
\par 
\par function ss_as_string (&$thing, $column = 0) \{
\par     if (is_object($thing)) \{
\par         return ss_object_as_string($thing, $column);
\par     \}
\par     elseif (is_array($thing)) \{
\par         return ss_array_as_string($thing, $column);
\par     \}
\par     elseif (is_double($thing)) \{
\par         return "Double(".$thing.")";
\par     \}
\par     elseif (is_long($thing)) \{
\par         return "Long(".$thing.")";
\par     \}
\par     elseif (is_string($thing)) \{
\par         return "String(".$thing.")";
\par     \}
\par     else \{
\par         return "Unknown(".$thing.")";
\par     \}
\par \}
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Note that these functions work together to correctly print, format and indent arrays. They are also able to print objects when they have been defined with the PHPLIB standard variable
s classname (the name of the class) and persistent_slots (an array of the variable names we care about). 
\par 
\par Now we can see the state of any variable by just doing: 
\par 
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {\fs20     echo ss_as_string($my_variable);
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We can see the value of all variables currently defined in the PHP namespace with: 
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }{\fs20     echo ss_as_string($GLOBALS);
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.5\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Log Functions
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par A great way to debug is through logging.  It\rquote s even easier if you can leave the log messages through your code and turn them on and off with a single command.  To facilitate this we will create a number of logging functions.
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 
\par $ss_log_level = 0;
\par $ss_log_filename = '/tmp/ss-log';
\par $ss_log_levels = array(
\par     NONE  => 0,
\par     ERROR => 1,
\par     INFO  => 2,
\par     DEBUG => 3);
\par 
\par function ss_log_set_level ($level = ERROR) \{
\par     global $ss_log_level;
\par     $ss_log_level = $level;
\par \}
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 function ss_log ($level, $message) \{
\par     global $ss_log_level, $ss_log_filename;
\par     if ($ss_log_levels[$ss_log_level] < $ss_log_levels[$level]) \{
\par         // no logging to be done
\par         return false;
\par     \}
\par     $fd = fopen($ss_log_filename, "a+");
\par     fputs($fd, $level.' - ['.ss_timestamp_pretty().'] - '.$message."\\n");
\par     fclose($fd);
\par     return true;
\par \}
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 function ss_log_reset () \{
\par     global $ss_log_filename;
\par     @unlink($ss_log_filename);
\par \}
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par There are 4 logging levels available.  Log messages will only be displayed if they are at a level less verbose than that currently set.  So, we can turn on logging with the following command:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 ss_log_set_level(INFO);
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {Now any log messages from the levels ERROR or INFO will be recorded.  DEBUG messages will be ignored.  We can have as many log entries as we like.  They take the form:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 ss_log(ERROR, "testing level ERROR");
\par ss_log(INFO, "testing level INFO");
\par ss_log(DEBUG, "testing level DEBUG");
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {\page This will add the following entries to the log:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 ERROR \endash  [Feb 10, 2000 20:58:17] \endash  testing level ERROR
\par INFO \endash  [Feb 10, 2000 20:58:17] \endash  testing level INFO
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par You can empty the log at any time with:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 ss_log_reset();
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 
\par }\pard \s18\nowidctlpar\widctlpar\adjustright {\f0\cgrid 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.6\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Optimization
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We need a way to test the execution speed of our code before we can easily perform optimizations.  A set of timing functions that utilize microtime() is the easiest method:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 function ss_timing_start ($name = \lquote default\rquote ) \{
\par     global $ss_timing_start_times;
\par     $ss_timing_start_times[$name] = explode(' ', microtime());
\par \}
\par 
\par function ss_timing_stop ($name = \lquote default\rquote ) \{
\par     global $ss_timing_stop_times;
\par     $ss_timing_stop_times[$name] = explode(' ', microtime());
\par \}
\par 
\par function ss_timing_current ($name = \lquote default\rquote ) \{
\par     global $ss_timing_start_times, $ss_timing_stop_times;
\par     if (!isset($ss_timing_start_times[$name])) \{
\par         return 0;
\par     \}
\par     if (!isset($ss_timing_stop_times[$name])) \{
\par         $stop_time = explode(' ', microtime());
\par     \}
\par     else \{
\par         $stop_time = $ss_timing_stop_times[$name];
\par     \}
\par     // do the big numbers first so the small ones aren\rquote t lost
\par     $current = $stop_time[1] \endash  $ss_timing_start_times[$name][1];
\par     $current += $stop_time[0] \endash  $ss_timing_start_times[$name][0];
\par     return $current;
\par \}
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Now we can check the execution time of any code very easily.  We can even run a number of execution time checks simultaneously because we have established named timers.
\par 
\par See the optimizations section below for the examination of echo versus inline coding for an example of the use of these functions.
\par 
\par }{
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 2.1.3.7\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {\page }{Debugging and Optimizing Database Operations
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The best way to gauge the stress you are placing on the database with your pages is through observation.  We will combine the logging and timing code above to assist us in this process.
\par 
\par We will alter the query() function in PHPLib, adding debugging and optimizing capabilities that we can enable and disable easily.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 function query($Query_String, $halt_on_error = 1) \{
\par     $this->connect();
\par     ss_timing_start();
\par     $this->Query_ID = @mysql_query($Query_String,$this->Link_ID);
\par     ss_timing_stop();
\par     ss_log(INFO, ss_timing_current().\rquote  Secs \endash  \lquote .$Query_String);
\par     $this->Row   = 0;
\par     $this->Errno = mysql_errno();
\par     $this->Error = mysql_error();
\par     if ($halt_on_error && !$this->Query_ID) \{
\par       $this->halt("Invalid SQL: ".$Query_String);
\par     \}
\par     return $this->Query_ID;
\par \}
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 3\tab}}\pard\plain \s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\outlinelevel1\adjustright \b\i\f1\cgrid {Chameleon Coding
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 3.1.1\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par A chameleon is a lizard that is well known for its ability to change skin color.  This is a useful metaphor for web programming as it highlights the importance of separating well structured and stable backend code from the dynamic web pages it supports.

\par 
\par PHP is the perfect language for chameleon coding as it supports both structured classes and simple web scripting.
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 3.1.2\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Structuring your PHP Code
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 3.1.2.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par When writing PHP code we need to make a clear distinction between the code which does the principal work of the application and the code which is used to display that work to the user.
\par 
\par The backend code does the difficult tasks like talking to the database, logging, and performing calculations.
\par 
\par The pages that display the interface to these operations are part of the front end.
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 3.1.2.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Dynamic, Hackable Frontend Code
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Mixing programming code in with HTML is messy.  We can talk about ways to format the code or structure your pages, but the end result will still be quite complicated.
\par 
\par We need to move as much of the code away from the HTML as possible.  But, we need to do this so that we don\rquote t get lost in the interaction between our application and the user interface.
\par 
\par A web site is a dynamic target.  It is continually evolving, improving and changing.  We need to keep our HTML pages simple so that these changes can be made quickly and
 easily.  The best way to do that is by making all calls to PHP code simple and their results obvious.
\par 
\par We shouldn\rquote t worry too much about the structure of the PHP code contained in the front end, it will change soon anyway.
\par 
\par That means that we need to remove all structured code from the actual pages into the supporting include files.  All common operations should be encapsulated into functions contained in the backend.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 3.1.2.3\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Stable, Structured Backend Code
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par In complete contrast to the web pages your backend cod
e should be well designed, documented and structured.  All the time you invest here is well spent, next time you need a page quickly hacked together all the hard parts will be already done waiting for you in backend functions.
\par 
\par Your backend code should be arranged into a set of include files.  These should be either included dynamically when required, or automatically included in all pages through the use of the php3_auto_prepend_file directive.
\par 
\par If you need to include HTML in your backend code it should be
 as generic as possible.  All presentation and layout should really be contained in the front end code.  Exceptions to this rule are obvious when they arise, for example, the creation of select boxes for a date selection form.
\par 
\par PHP is flexible enough to le
t you design your code using classes and or functions.  My object oriented background means that I like to create a class to represent each facet of the application.  All database queries are encapsulated in these classes, hidden from the front end pages 
completely.  This helps by keeping all database code in a single location and simplifying the PHP code contained in pages.
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 3.1.3\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Coding Techniques
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 3.1.3.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Include Files
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par If we are building these function libraries we need to work out a scheme for including them in our pages.  There are a couple of different approaches to this.
\par 
\par We can either include all our library files all the time, or include them conditionally as required.
\par 
\par As part of my speed of coding philosophy I prefer to just include all the files and never think about it again.  When the Zend optimizing engine becomes available to pre-parse this code the performance hit will not be significant.
\par 
\par I have about 10,000 lines of code in PHP libraries for my site.  A quick check using the timing functions will tell us the damage:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 <?php
\par require(\lquote timing.inc\rquote );
\par ss_timing_start();
\par // include other library files here
\par ss_timing_stop();
\par echo \lquote <h1>\rquote .ss_timing_current().\rquote </h1>\rquote ;
\par ?>
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par It seems to take about 0.6 seconds to parse all my function libraries.  My sites do not receive millions of hits so this penalty is not important enough to worry about yet.
\par 
\par One drawback of including all libraries all the time is that it makes it difficult to work on them.  One mistake in any of those files will bring down every page on the entire site.  Be very, very careful.
\par 
\par If you are not as lazy as me then perhaps you\rquote d prefer the conditional include technique.  It\rquote s simple to use and implement.  Just structure all of your library files like the example below:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {\fs20 <?php // liba.inc
\par 
\par if ( defined( '__LIBA_INC' ) ) return;
\par define( '__LIBA_INC', 1 );
\par 
\par /*
\par  * Library code here.
\par  */
\par 
\par ?>
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {\page Then you just need to include this library in any script where it is used.  Libraries may also need to include other libraries.  Your include statements look the same as normal:
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 include(\lquote liba.inc\rquote );
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par This way, the calling scripts don't have to do any of the work.  Unfortunately return won't work from require()d files in PHP4 anymore. So, you will need to use include() instead.  You can still use require() in PHP3.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 3.1.3.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Design Patterns for Web Programming
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Some of the best web programming techniques are captured in the Web Programming Design Patterns.  They are high level descriptions of the best solutions to common web programming problems.  You can read more about these here:
\par 
\par }\pard\plain \s18\li432\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs18 http://www.e-gineer.com/articles/design-patterns-in-web-programming.phtml
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 4\tab}}\pard\plain \s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\outlinelevel1\adjustright \b\i\f1\cgrid {Speed of Coding, Not Speed of Code
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.1\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The hardest thing for me to learn as a web programmer was to change the w
ay I wrote code.  Coming from a product development and university background the emphasis is on doing it the right way.  Products have to be as close to perfect as possible before release.  School assignments need to be perfect.
\par 
\par The web is different.  Here it is more important to finish a project as soon as possible than it is to get it perfect first time. Web sites are evolutionary, there is no freeze date after which it is difficult to make changes.
\par 
\par I like to think of my web sites as prototypes.  Everyday they get a little closer to being finished.  I can throw together 3 pages in the time it would take to do one perfectly.  It\rquote 
s usually better on the web to release all three and then decide where your priorities lie.  Speed is all important.
\par 
\par So, everything you do as a programmer should be focused on the speed at which you are producing code (pages).
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.2\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {\page Optimizations to Satisfy Your Hacker Instinct

\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.2.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par This section describes some tricks you can use to speed up your PHP code.  Most of them make very little difference when compared to the time taken for parsing, database queries and sending data down a modem.
\par 
\par They are useful to know both so you can feel you are optimizing your code and to aid your understanding of certain PHP concepts.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.2.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Use Inline Tags Instead of echo
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The PHP interpreter gets invoked once for each page.  Whatever is not contained in PHP tags like <? ?> is just echoed back out by the interpreter.
\par 
\par As a result it is faster to use lots of little in-line tags than it is to build massive strings or use echo statements.
\par 
\par Let\rquote s use the timing functions we developed above to run a quick test.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 <h2>Test Inline Tags vs echo</h2>
\par 
\par <p>
\par 
\par <?php ss_timing_start('echo'); ?>
\par <?php
\par for ($i=0; $i<1000; $i++) \{
\par     echo $i."<br>";
\par \}
\par ?>
\par <?php ss_timing_stop('echo'); ?>
\par 
\par <p>
\par 
\par <?php ss_timing_start(str); ?>
\par <?php
\par $str = '';
\par for ($i=0; $i<1000; $i++) \{
\par     $str .= $i."<br>";
\par \}
\par echo $str;
\par ?>
\par <?php ss_timing_stop(str); ?>
\par 
\par <p>
\par \page <?php ss_timing_start(inline); ?>
\par <?php
\par for ($i=0; $i<1000; $i++) \{
\par ?>
\par 123<br>
\par <?php
\par \}
\par ?>
\par <?php ss_timing_stop(inline); ?>
\par 
\par <p>
\par <br>
\par 
\par <h2>Results</h2>
\par 
\par echo - <?php echo ss_timing_current('echo') ?>
\par 
\par <p>
\par 
\par str - <?php echo ss_timing_current(str) ?>
\par 
\par <p>
\par 
\par inline - <?php echo ss_timing_current(inline) ?>
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The results of this test averaged out to be:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 echo   - 0.063347 secs
\par str    - 0.083996 secs
\par inline - 0.035276 secs
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We can see that inline is clearly the fastest technique.  But, when we consider that we only save 0.03 milliseconds each time we use it, the method you use to echo your values is pretty much irrelevant. A moral victory at best\'85
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \f2 {\f0\cgrid 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.2.3\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {str_replace vs ereg_replace
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par It\rquote s predictable that the simple str_replace() will be significantly faster than ereg_replace.  A quick test also reveals the time difference when we introduce a simple pattern match into the ereg_replace.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 <h2>Test str_replace vs ereg</h2>
\par 
\par <p>
\par 
\par <?php $string = 'Testing with <i>emphasis</i>'; ?>
\par \page <?php ss_timing_start('str_replace'); ?>
\par <?php
\par for ($i=0; $i<1000; $i++) \{
\par     str_replace('i>', 'b>', $string).'<br>';
\par \}
\par ?>
\par <?php ss_timing_stop('str_replace'); ?>
\par 
\par <p>
\par 
\par <?php ss_timing_start(ereg); ?>
\par <?php
\par for ($i=0; $i<1000; $i++) \{
\par     ereg_replace('i>', 'b>', $string).'<br>';
\par \}
\par ?>
\par <?php ss_timing_stop(ereg); ?>
\par 
\par <p>
\par 
\par <?php ss_timing_start(ereg_pattern); ?>
\par <?php
\par for ($i=0; $i<1000; $i++) \{
\par     ereg_replace('<([/]*)i>', '<\\1b>', $string).'<br>';
\par \}
\par ?>
\par <?php ss_timing_stop(ereg_pattern); ?>
\par 
\par <p>
\par <br>
\par 
\par <h2>Results</h2>
\par 
\par str_replace - <?php echo ss_timing_current(str_replace) ?>
\par 
\par <p>
\par 
\par ereg - <?php echo ss_timing_current(ereg) ?>
\par 
\par <p>
\par 
\par ereg_pattern - <?php echo ss_timing_current(ereg_pattern) ?>
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Here are the results.  Notice how using the simple pattern in ereg_replace has almost doubled the execution time.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 str_replace - 0.089757 
\par ereg - 0.149406 
\par ereg_pattern - 0.248881 
\par }\pard \s18\nowidctlpar\widctlpar\adjustright {\f0\cgrid 
\par Again, the difference of these functions relative to one another is noticable but in the context of returning a web page basically irrelevant.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.2.4\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Quoted Strings
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP parses double quoted strings to look for variables.  Any variable contained in a double quoted string will be resolved and inserted into the string at that location.
\par 
\par Single quoted strings are printed exactly as they appear.  They are not parsed.
\par 
\par So, you should use single quoted strings where possible to reduce the work to be done by the parser.
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.3\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Optimizations that Really Make a Difference
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.3.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Reduce queries
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Accessing the database is expensive.  Persistent connections reduce a lot of the overhead by removing the need to connect with each request, but performing queries is still a high cost exercise compared with the execution of PHP code.
\par 
\par This is particularly true due to locking issues in the database.  In testing you might see that individual queries to the database are actually quite fast.  In production you will see the
 database get overloaded with many small queries as it struggles to satisfy a single large query.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.3.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Optimize your Queries
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The type of queries you make to the database will have a dramatic effect on the speed of your application.  Making smart use of column indexes is essential.  Small changes to your SQL can result in dramatic time savings.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.3.3\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Avoid joins
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Joins are expensive.  The minute you do a join the size of the resulting table becomes the multiple of the tables being joined.
\par 
\par Lets look at some quick statistics to give you a feel for the cost of joins.  I have created two tables, foo and big_foo.  Foo 
contains a single column with the numbers 1-1000.  Big_foo contains a single column with the numbers 1-1,000,000.  So, big_foo is equivalent in size to the join of foo with itself.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 $db->query(\ldblquote select * from foo\rdblquote );
\par 0.032273 secs
\par 
\par $db->next_record();
\par 0.00048999999999999 secs
\par $db->query(\ldblquote insert into foo values (NULL)\rdblquote );
\par 0.019506 secs
\par 
\par $db->query(\ldblquote select * from foo as a, foo as b\rdblquote );
\par 17.280596 secs
\par 
\par $db->query(\ldblquote select * from foo as a, foo as b where a.id > b.id\rdblquote );
\par 14.645251 secs
\par 
\par $db->query(\ldblquote select * from foo as a, foo as b where a.id = b.id\rdblquote );
\par 0.041269 secs
\par 
\par $db->query(\ldblquote select * from big_foo\rdblquote );
\par 25.393672 secs
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We can see from the results above that selecting all rows from the join of a 1000 row table is only marginally quicker than selecting all rows from a 1,000,000 row table.
\par 
\par It is worth noting that a join that returns a small number of rows is still very fast.
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \f2 {\f0\cgrid 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.3.4\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Make your pages smaller
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Let\rquote s consider a typical user on a 56Kbps modem.  On a good connection, they can download pages at approximately 6kBps.  We were looking at optimizations above that save approximately 0.15 seconds on an extremely complex page.  
Reducing the size of your page by about 900 bytes will give you an equivalent saving.
\par 
\par Usually response times for the user are gained most easily through examination of your HTML and optimizing the use of images.
\par 
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.4\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Gotchas
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.4.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par This section will be quite small since mo
st PHP developers are now making the switch to PHP4.  The parsing engine has been completely rewritten and has removed a lot of the annoying quirks that can bring a lot of grief to both newcomers and experienced PHP programmers.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.4.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Arrays of Objects
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP3 does not handle arrays of objects very well.  The following code will NOT parse correctly:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 $a[$i]->foo();
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP does not like the object reference after the array index brackets.  Instead you need to use a temporary variable:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 $tmp = $a[$i];
\par $tmp->foo();
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.4.3\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Calling overridden methods
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP3 has support for classes and inheritence.  You can even override functions in subclasses.  Problems occur wh
en you need to call the overridden function in the parent class.  Unfortunately this is quite common as you may want to define the function in the subclass as being the original function plus some extra work.  If that explanation h
as made you completely confused take a look at the example below.
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {There is a (hacky) work around.  The basic idea is to define a unique method name in each class for the same method.  Then the extended class can reference directly to the un
ique method name in its parent.
\par 
\par To achieve the appearance of polymorphism when using the class you just create a method with the desired name in every class definition that calls the unique method name in that class.  An example will explain it better:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 class A \{
\par   function A() \{ \}
\par 
\par   function A_dspTwo() \{
\par     echo "A: Two<br>";
\par   \}
\par 
\par   function dspTwo() \{
\par     return $this->A_dspTwo();  // call the class A dspTwo method
\par   \}
\par \}
\par   
\par class B extends A \{
\par   function B() \{
\par     $this->A(); // call the parent constructor.
\par   \}
\par 
\par   function B_dspTwo() \{
\par     $this->A_dspTwo();
\par     echo "B: Two<br>";
\par   \}
\par 
\par   function dspTwo() \{
\par     return $this->B_dspTwo();
\par   \}
\par \}
\par 
\par $object = new B();
\par $object->dspTwo();
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {This is supported by the Zend engine and will thus be supported in PHP 4.0. 
\par 
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.4.4\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Trouble with Types
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par PHP is a loosely typed language.  That means that the variables actually do have types, but in general you do not need to worry about them.  PHP will automatically convert variables between types when required.
\par 
\par Unfortunately there are some cases where you need to manually convert the type of variables.  This can lead to confusion because they are very rare.  Below is an example page to highlight how rare these cases can be:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 <h2>Test String Integer Comparisons</h2>
\par 
\par <?php
\par $a = 1;
\par $b = '2';
\par if ($a < $b) \{
\par     echo ss_as_string($a).' < '.ss_as_string($b);
\par \}
\par else \{
\par     echo ss_as_string($a).' >= '.ss_as_string($b);
\par \}
\par ?>
\par 
\par <p>
\par 
\par <?php
\par $a = 2;
\par $b = '2';
\par if ($a == $b) \{
\par     echo ss_as_string($a).' == '.ss_as_string($b);
\par \}
\par else \{
\par     echo ss_as_string($a).' != '.ss_as_string($b);
\par \}
\par ?>
\par 
\par <p>
\par 
\par <?php
\par $a = array(2, '1');
\par if ($a[0] > $a[1]) \{
\par     echo ss_as_string($a[0]).' > '.ss_as_string($a[1]);
\par \}
\par else \{
\par     echo ss_as_string($a[0]).' <= '.ss_as_string($a[1]);
\par \}
\par ?>
\par 
\par <p>
\par 
\par \page <?
\par $a = array('2', '1');
\par echo ss_as_string($a).'<br>sorts to<br>';
\par sort($a);
\par echo ss_as_string($a);
\par ?>
\par 
\par <p>
\par 
\par <?
\par $a = array(2, 1);
\par echo ss_as_string($a).'<br>sorts to<br>';
\par sort($a);
\par echo ss_as_string($a);
\par ?>
\par 
\par <p>
\par 
\par <?
\par $a = array('2', 1);
\par echo ss_as_string($a).'<br>sorts to<br>';
\par sort($a);
\par echo ss_as_string($a);
\par ?>
\par 
\par <p>
\par 
\par }{\b\fs20 <?
\par $a = array(2, '1');
\par echo ss_as_string($a).'<br>sorts to<br>';
\par sort($a);
\par echo ss_as_string($a);
\par ?>}{\b 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Here is the output from these tests.  Notice that all the tests work correctly except for the last one, sorting array(2, \lquote 1\rquote ).  We can even sort array(\lquote 2\rquote , 1) 
without problems.  The error occurs when we have multiple types in an array passed to the sort function with the order number then string.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 Long(1) < String(2) 
\par 
\par Long(2) == String(2) 
\par 
\par Long(2) > String(1) 
\par 
\par Array(\line 0 ==> String(2)\line 1 ==> String(1)\line )\line sorts to\line Array(\line 0 ==> String(1)\line 1 ==> String(2)\line ) 
\par 
\par Array(\line 0 ==> Long(2)\line 1 ==> Long(1)\line )\line sorts to\line Array(\line 0 ==> Long(1)\line 1 ==> Long(2)\line ) 
\par 
\par Array(\line 0 ==> String(2)\line 1 ==> Long(1)\line )\line sorts to\line Array(\line 0 ==> Long(1)\line 1 ==> String(2)\line ) 
\par 
\par }{\b\fs20 Array(\line 0 ==> Long(2)\line 1 ==> String(1)\line )\line sorts to\line Array(\line 0 ==> Long(2)\line 1 ==> String(1)\line ) 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.5\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Tricky Concepts
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.5.1\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Include vs Require
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Include() and require() are slightly different.  Basically, include is conditional and require is not.
\par 
\par This would include 'somefile' if $something is true:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 if($something)\{
\par     include("somefile");
\par \}
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {This would include 'somefile' unconditionally
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \f2 {\f0\cgrid 
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 if($something)\{
\par     require("somefile");
\par \}
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {\page This would have VERY strange effects if somefile looked like:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 \} echo "Ha!  I'm here regardless of something: $something<br>\\n";
\par if (false) \{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par Another interesting example is to consider what will happen if you use include() or require() inside a loop.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 $i = 1;
\par while ($i < 3) \{
\par     require(\ldblquote somefile.$i\rdblquote );
\par     $i++;
\par \}
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {Using require() as above will cause the same file to be used every single iteration.  Clearly this is not the intention since the file name should be changing in each iteration of the loop.
  We need to use include() as below.  Include() will be evaluated at each iteration of the loop including somefile.0, somefile.1, etc as expected.
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {\fs20 $i = 1;
\par while ($i < 3) \{
\par     include(\ldblquote somefile.$i\rdblquote );
\par     $i++;
\par \}
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The only interesting question that remains is what file will be required above.  It turns out that PHP uses the value of $i when it reads the require() statement for the first time.  So, the re
quire() loop above will include something.1 two times.  The include() loop includes something.1 and something.2.
\par 
\par 
\par {\listtext\pard\plain\s4 \b\cgrid \hich\af0\dbch\af0\loch\f0 4.1.5.2\tab}}\pard\plain \s4\fi-864\li864\keepn\nowidctlpar\widctlpar\jclisttab\tx864\ls3\ilvl3\outlinelevel3\adjustright \b\cgrid {Echo vs Print
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par There is a difference between the two, but speed-wise it should be irrelevant which one you use.  print() behaves like a function in that you can do:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 $ret = print "Hello World";
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {and $ret will be 1.
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {That means that print can be used as part of a more complex expression where echo cannot.  print is also part of the precedence table which it needs to be if it is to be used 
\par within a complex expression.  It is just about at the bottom of the precendence list though.  Only "," AND, OR and XOR are lower.
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {echo is marginally faster since it doesn't set a return value if you really want to get down to the nitty gritty.
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {\page If the grammar is:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 echo expression [, expression[, expression] ... ]
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {Then
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 echo ( expression, expression ) 
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {is not valid.  ( expression ) reduces to just an expression so this would be valid:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 echo ("howdy"),("partner");
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {but you would simply write this as:
\par }\pard\plain \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright \f2 {
\par }\pard \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {\fs20 echo "howdy","partner";
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {if you wanted to use two expressions.  Putting the brackets in there serves no purpose since there is no operator precendence issue with a single expression like that.
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.6\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {Scripting with PHP
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par It\rquote s easy to forget that PHP is a complete programming language that can be used for more than just generating web pages.  I was once writing a script to receive emails and place them in a database.  
I was fumbling around in Perl and shell scripts until it dawned on me to install PHP for scripting.  30 minutes later the emails were churning in.
\par 
\par Installing PHP for scripting on unix is easy.  Just remove the \endash with-apache directive from your configure options.  This will create the PHP binary that can be used to run scripts directly from the command line.  There are complete in
structions for installing PHP for scripting here:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 http://www.e-gineer.com/instructions
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par You can then write your script like any other shell script.  Here is an example:
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 #!/usr/local/bin/php \endash q
\par <?php
\par // your php code here
\par ?>
\par }\pard \s18\nowidctlpar\widctlpar\adjustright {\f0\cgrid 
\par Once you start scripting with PHP the possibilities are endless.  It\rquote s a fully featured language, you can do anything you would normally do in a shell script.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s3 \f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.7\tab}}\pard\plain \s3\fi-720\li720\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx720\ls3\ilvl2\outlinelevel2\adjustright \f1\cgrid {\page Extreme Programming
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par We are getting a little off topic here, but I believe programming techniques are an important part of being a good programmer.
\par 
\par My working style is based on the ideas of Extreme Programming.  From the Extreme Programming web site:
\par 
\par }\pard\plain \s20\li432\nowidctlpar\widctlpar\adjustright \i\cgrid {XP improves a software project in four essential ways; communication, simplicity, feedback, and courage. XP programmers communicate with their custom
ers and fellow programmers. They keep their design simple and clean. They get feedback by testing their software starting on day one. They deliver the system to the customers as early as possible and implement changes as suggested. With this foundation XP
 programmers are able to courageously respond to changing requirements and technology.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The focus on speed and change is what makes Extreme Programming so suitable for web projects.
\par 
\par You can learn more about Extreme Programming here:
\par 
\par }\pard\plain \s18\li432\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\fs20 http://www.extremeprogramming.org
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5\tab}}\pard\plain \s2\fi-432\li432\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx432\ls3\outlinelevel1\adjustright \b\i\f1\cgrid {Getting Help
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par There are a number of resources available for PHP help.  The PHP community is generous with its time and assistance.  Make use of their contributions and use the time you save to help others.
\par 
\par The PHP Knowledge Base is a growing collection of PHP related information.  It captures the knowledge from the mailing list into a complete collection of searchable, correct answers.  Of course, I may be a little biased.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\field\flddirty{\*\fldinst {\fs20  HYPERLINK http://php.faqts.com }{\fs20 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001500000068007400740070003a002f002f007000680070002e00660061007100740073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2c00000068007400740070003a002f002f007000680070002e00660061007100740073002e006300
6f006d002f000000}}}{\fldrslt {\cs16\fs20\ul\cf2 http://php.faqts.com}}}{\fs20 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par The PHP manual is a great reference point for information on functions or language constructs.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\field\fldedit{\*\fldinst {\fs20  HYPERLINK http://php.faqts.com }{\fs20 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001500000068007400740070003a002f002f007000680070002e00660061007100740073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2c00000068007400740070003a002f002f007000680070002e00660061007100740073002e006300
6f006d002f000000}}}{\fldrslt {\cs16\fs20\ul\cf2 http://www.php.net/manual}}}{\fs20 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par \page If you can\rquote t find the relevant information in the PHP Knowledge Base your next stop should be the mailing list archives.  
There are thousands of questions on the mailing list every month so you can be almost certain your question has been asked before.  Prepare to do some wading.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\field\flddirty{\*\fldinst {\fs20  HYPERLINK http://www.progressive-comp.com/Lists/?l=php3-general&r=1&w=2 }{\fs20 
{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003e00000068007400740070003a002f002f007700770077002e00700072006f00670072006500730073006900760065002d0063006f006d0070002e0063006f006d002f004c0069007300740073002f003f006c003d0070006800700033002d00670065006e00
6500720061006c00260072003d003100260077003d0032000000e0c9ea79f9bace118c8200aa004ba90b7c00000068007400740070003a002f002f007700770077002e00700072006f00670072006500730073006900760065002d0063006f006d0070002e0063006f006d002f004c0069007300740073002f003f006c003d
0070006800700033002d00670065006e006500720061006c00260072003d003100260077003d0032000000}}}{\fldrslt {\cs16\fs20\ul\cf2 http://www.progressive-comp.com/Lists/?l=php3-general&r=1&w=2}}}{\fs20 
\par }{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {If all that searching fails to help, try asking on the mailing list.  A lot of PHP gurus reside there.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\field\flddirty{\*\fldinst {\fs20  HYPERLINK mailto:php3@lists.php.net }{\fs20 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b020000001700000013000000700068007000330040006c0069007300740073002e007000680070002e006e00650074000000e0c9ea79f9bace118c8200aa004ba90b340000006d00610069006c0074006f003a00700068007000330040006c0069007300740073002e0070006800
70002e006e00650074000000}}}{\fldrslt {\cs16\fs20\ul\cf2 php3@lists.php.net}}}{\fs20 
\par }\pard \s18\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {If all these on-line resources aren\rquote t enough or you hate reading from a computer screen, you might be interested in one of the many PHP books that are now available.
\par 
\par }\pard\plain \s18\li720\nowidctlpar\widctlpar\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\tx9590\adjustright \f2 {\field\fldedit{\*\fldinst {\fs20  HYPERLINK http://php.faqts.com }{\fs20 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001500000068007400740070003a002f002f007000680070002e00660061007100740073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2c00000068007400740070003a002f002f007000680070002e00660061007100740073002e006300
6f006d002f000000}}}{\fldrslt {\cs16\fs20\ul\cf2 http://www.php.net/books.php3}}}{\fs20 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \cgrid {
\par }}